schema {
  query: CommonSchemaQuery
  mutation: CommonSchemaMutation
}

enum AccountBillingParameterBillingType {
  NONE
  PREPAID
  POSTPAID
}

enum AccountBillingParameterPricingModelType {
  PAGE
  DURATION
}

type ApiUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  keyPreview: String!
  isEnabled: Boolean!
  role: Role!
  authorizedIPs: [String]
}

input ApiUserBoolFilter {
  field: ApiUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ApiUserBoolFilterField {
  IS_ENABLED
}

input ApiUserDateFilter {
  field: ApiUserDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum ApiUserDateFilterField {
  CREATION_DATE
  LAST_CONNECTION_DATE
}

input ApiUserInput {
  id: String
  name: String!
  isEnabled: Boolean
  role: RoleInput
  authorizedIPs: [String]
}

enum ApiUserProfileFilterField {
  PROFILE
}

input ApiUserQueryParams {
  sortField: ApiUserSortField
  sortDirection: SortDirection
  stringFilters: [ApiUserStringFilter]
  dateFilters: [ApiUserDateFilter]
  boolFilters: [ApiUserBoolFilter]
  profileFilters: [ApiUserUserProfileEnumFilter]
}

enum ApiUserSortField {
  NAME
  CREATION_USER_LABEL
  CREATION_DATE
  LAST_CONNECTION_DATE
  IS_ENABLED
  ENVIRONMENT_ID
  DOMAIN_ID
  TENANT_ID
}

input ApiUserStringFilter {
  field: ApiUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ApiUserStringFilterField {
  NAME
  CREATION_USER_ID
  CREATION_USER_LABEL
  ENVIRONMENT_ID
  DOMAIN_ID
  TENANT_ID
}

type ApiUserTypeConnection {
  edges: [ApiUser]
  pageInfo: PageInfo
}

input ApiUserUserProfileEnumFilter {
  field: ApiUserProfileFilterField!
  operator: NumberFilterOperator!
  filterValue1: UserProfile!
  filterValue2: UserProfile
}

enum BoolFilterOperator {
  EQUAL
  NOT_EQUAL
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IS_NULL
  IS_NOT_NULL
}

type ChorusB2GConfig {
  login: String!
  password: String!
  serverType: ChorusServerType!
  providerId: String!
  recalculate: Boolean!
  isTestMode: Boolean!
}

input ChorusB2GConfigInput {
  login: String!
  password: String!
  serverType: ChorusServerType!
  providerId: String!
  recalculate: Boolean!
  isTestMode: Boolean!
}

enum ChorusServerType {
  QUALIF
  PROD
}

type CommonSchemaMutation {
  addApiUser(item: ApiUserInput!): ApiUser
  editApiUser(id: String!, item: ApiUserInput!): ApiUser
  renewApiKey(id: String!): ApiUser
  addDomain(item: DomainInput!): Domain
  editDomain(id: String!, item: DomainInput!): Domain
  addEnvironment(item: EnvironmentInput!): Environment
  editEnvironment(id: String!, item: EnvironmentInput!): Environment
  addProductInstall(item: ProductInstallInput!): ProductInstall
  editProductInstall(id: String!, item: ProductInstallInput!): ProductInstall
  addProduct(item: ProductInput!): Product
  editProduct(id: String!, item: ProductInput!): Product
  addTenant(item: TenantInput!, domainId: String): Tenant
  editTenant(id: String!, item: TenantInput!, domainId: String): Tenant
}

type CommonSchemaQuery {
  schema: String
  apiUserItems(idList: [String!]!): [ApiUser]
  apiUserList(params: ApiUserQueryParams, after: String): ApiUserTypeConnection
  configurationItems(nameList: [String!]!, environmentId: String): [String]
  domainItems(idList: [String!]!): [Domain]
  domainList(params: DomainQueryParams, after: String): DomainTypeConnection
  environmentItems(idList: [String!]!): [Environment]
  environmentList(params: EnvironmentQueryParams, after: String): EnvironmentTypeConnection
  omsAccountInfoItems(idList: [Int!]!): [OmsAccountData]
  omsAccountInfoList(params: OmsAccountInfoQueryParams, after: String): OmsAccountInfoTypeConnection
  productInstallItems(idList: [String!]!): [ProductInstall]
  productInstallList(params: ProductInstallQueryParams, after: String): ProductInstallTypeConnection
  productItems(idList: [String!]!): [Product]
  productList(params: ProductQueryParams, after: String): ProductTypeConnection
  tenantItems(idList: [String!]!, domainId: String): [Tenant]
  tenantList(params: TenantQueryParams, after: String, domainId: String): TenantTypeConnection
  test: String
  userItems(idList: [String!]!): [User]
}

"""
The `DateTime` scalar type represents a date and time. `DateTime` expects
timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTime

type Domain {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  environmentId: String!
  name: String!
  email: String
  phone: String
  isEnabled: Boolean!
  address: PostalAddress
  authorizedProductIds: [String]
  isSubDomainAllowed: Boolean!
  parentDomainId: String
  parentDomainName: String
  ancestorDomains: [IdName]
}

input DomainBoolFilter {
  field: DomainBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum DomainBoolFilterField {
  IS_ENABLED
  IS_SUB_DOMAIN_ALLOWED
}

input DomainInput {
  id: String
  environmentId: String!
  name: String!
  email: String
  phone: String
  isEnabled: Boolean
  address: PostalAddressInput
  authorizedProductIds: [String]
  isSubDomainAllowed: Boolean
  parentDomainId: String
}

input DomainQueryParams {
  sortField: DomainSortField
  sortDirection: SortDirection
  stringFilters: [DomainStringFilter]
  boolFilters: [DomainBoolFilter]
}

enum DomainSortField {
  NAME
  EMAIL
  PHONE
  ENVIRONMENT_ID
  IS_ENABLED
  PARENT_DOMAIN_ID
  PARENT_DOMAIN_NAME
}

input DomainStringFilter {
  field: DomainStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DomainStringFilterField {
  NAME
  EMAIL
  PHONE
  ENVIRONMENT_ID
  ADDRESS_ADDRESS_LINE_1
  ADDRESS_ADDRESS_LINE_2
  ADDRESS_POSTAL_CODE
  ADDRESS_CITY
  ADDRESS_STATE
  ADDRESS_COUNTRY
  PARENT_DOMAIN_ID
  PARENT_DOMAIN_NAME
  ANCESTOR_DOMAIN_ID
  ANCESTOR_DOMAIN_NAME
}

type DomainTypeConnection {
  edges: [Domain]
  pageInfo: PageInfo
}

type EdcUserAccount {
  accountId: Int!
  accountIdDest: Int!
  accountCodeDest: String!
  gedSchema: String!
  login: String
  loginDest: String
}

input EdcUserAccountInput {
  accountId: Int!
  accountIdDest: Int!
  accountCodeDest: String!
  gedSchema: String!
}

type EmailConfig {
  replyAddress: String
  senderAddress: String
  senderName: String
}

input EmailConfigInput {
  replyAddress: String
  senderAddress: String
  senderName: String
}

type Environment {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  isEnabled: Boolean!
}

input EnvironmentBoolFilter {
  field: EnvironmentBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum EnvironmentBoolFilterField {
  IS_ENABLED
}

input EnvironmentInput {
  id: String
  name: String!
  isEnabled: Boolean
}

input EnvironmentQueryParams {
  sortField: EnvironmentSortField
  sortDirection: SortDirection
  stringFilters: [EnvironmentStringFilter]
  boolFilters: [EnvironmentBoolFilter]
}

enum EnvironmentSortField {
  NAME
  IS_ENABLED
}

input EnvironmentStringFilter {
  field: EnvironmentStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum EnvironmentStringFilterField {
  NAME
}

type EnvironmentTypeConnection {
  edges: [Environment]
  pageInfo: PageInfo
}

type IdName {
  id: String!
  name: String
}

enum Media {
  FAX
  SMS
  VOICE
  POSTAL
  PUSH_NOTIFICATION
  EMAIL
  FAX_EMAIL
}

enum NumberFilterOperator {
  EQUAL
  NOT_EQUAL
  BETWEEN
  GREATER_THAN_OR_EQUAL
  GREATER_THAN
  LOWER_THAN_OR_EQUAL
  LOWER_THAN
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IS_NULL
  IS_NOT_NULL
}

type OmsAccount {
  info: OmsAccountInfo
  billingInfo: OmsAccountBillingInfo
  billingParameter: OmsAccountBillingParameter
}

type OmsAccountBillingInfo {
  customerNumber: Int!
  companyName: String!
  street1: String!
  street2: String
  city: String!
  state: String!
  zip: String!
  phone: String
  fax: String
  attention: String!
  email: String!
}

type OmsAccountBillingParameter {
  customerNumber: Int!
  pricingModel: AccountBillingParameterPricingModelType
  idClientCrm: Int!
  overchargingDuration: Boolean
  overchargingUnsentPage: Boolean
  overchargingFineMode: Boolean
  overchargingPagesOfNotCompletelySentDoc: Boolean
  quota: Boolean
  billingType: AccountBillingParameterBillingType
}

type OmsAccountData {
  omsAccount: OmsAccount
  mediaList: [Media!]!
}

type OmsAccountInfo {
  accountType: Int!
  billingGroup: Int!
  city: String!
  companyName: String!
  customerNumber: Int!
  fax: String!
  isBillingGroup: Boolean!
  phone: String!
  sla: Int!
  state: String!
  zip: String!
}

input OmsAccountInfoIntFilter {
  field: OmsAccountInfoIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum OmsAccountInfoIntFilterField {
  BILLING_GROUP
}

input OmsAccountInfoQueryParams {
  sortField: OmsAccountInfoSortField
  sortDirection: SortDirection
  stringFilters: [OmsAccountInfoStringFilter]
  intFilters: [OmsAccountInfoIntFilter]
}

enum OmsAccountInfoSortField {
  CUSTOMER_NUMBER
  BILLING_GROUP
  COMPANY_NAME
  CITY
  ZIP
  COUNTRY
}

input OmsAccountInfoStringFilter {
  field: OmsAccountInfoStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum OmsAccountInfoStringFilterField {
  CUSTOMER_NUMBER
  COMPANY_NAME
}

type OmsAccountInfoTypeConnection {
  edges: [OmsAccountInfo]
  pageInfo: PageInfo
}

type OmsUserAccount {
  customerNumber: Int!
  login: String!
}

input OmsUserAccountInput {
  customerNumber: Int!
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
}

type PostalAddress {
  additionalGeographicInfo: String
  additionalInfo: String
  city: String
  country: String
  name: String
  postBox: String
  street: String
  zipCode: String
}

input PostalAddressInput {
  additionalGeographicInfo: String
  additionalInfo: String
  city: String!
  country: String!
  name: String!
  postBox: String
  street: String!
  zipCode: String!
}

type PostalConfiguration {
  clientId: String
  isEnabled: Boolean!
  isTestMode: Boolean!
}

input PostalConfigurationInput {
  clientId: String
  isEnabled: Boolean!
  isTestMode: Boolean!
}

type Product {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  order: Int!
  isEnabled: Boolean!
}

type ProductAccess {
  productInstallId: String!
  productId: String!
  productName: String!
  order: Int!
  url: String!
}

input ProductAccessInput {
  productInstallId: String!
}

input ProductBoolFilter {
  field: ProductBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ProductBoolFilterField {
  IS_ENABLED
}

input ProductInput {
  id: String
  name: String!
  order: Int!
  isEnabled: Boolean
}

type ProductInstall {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  environmentId: String!
  productId: String!
  url: String!
  isEnabled: Boolean!
}

input ProductInstallBoolFilter {
  field: ProductInstallBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ProductInstallBoolFilterField {
  IS_ENABLED
}

input ProductInstallInput {
  id: String
  environmentId: String!
  productId: String!
  url: String!
  isEnabled: Boolean
}

input ProductInstallQueryParams {
  sortField: ProductInstallSortField
  sortDirection: SortDirection
  stringFilters: [ProductInstallStringFilter]
  boolFilters: [ProductInstallBoolFilter]
}

enum ProductInstallSortField {
  ENVIRONMENT_ID
  PRODUCT_ID
  URL
  IS_ENABLED
}

input ProductInstallStringFilter {
  field: ProductInstallStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ProductInstallStringFilterField {
  ENVIRONMENT_ID
  PRODUCT_ID
  URL
}

type ProductInstallTypeConnection {
  edges: [ProductInstall]
  pageInfo: PageInfo
}

input ProductIntFilter {
  field: ProductIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum ProductIntFilterField {
  ORDER
}

input ProductQueryParams {
  sortField: ProductSortField
  sortDirection: SortDirection
  stringFilters: [ProductStringFilter]
  intFilters: [ProductIntFilter]
  boolFilters: [ProductBoolFilter]
}

enum ProductSortField {
  ORDER
  NAME
  IS_ENABLED
}

input ProductStringFilter {
  field: ProductStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ProductStringFilterField {
  NAME
}

type ProductTypeConnection {
  edges: [Product]
  pageInfo: PageInfo
}

"""The application rights."""
enum RightType {
  """Get or list environments"""
  READ_ENVIRONMENT

  """Create environments"""
  ADD_ENVIRONMENT

  """Edit environments"""
  EDIT_ENVIRONMENT

  """Get or list domains"""
  READ_DOMAIN

  """Create or edit domains"""
  CHANGE_DOMAIN

  """Get or list tenants"""
  READ_TENANT

  """Create tenants"""
  ADD_TENANT

  """Edit tenants"""
  EDIT_TENANT

  """List user rights"""
  READ_RIGHT

  """Grant user rights"""
  GRANT_RIGHT

  """Grant internal user rights"""
  GRANT_INTERNAL_RIGHT

  """Get or list tenant users"""
  READ_TENANT_USER

  """Create or edit tenant users"""
  CHANGE_TENANT_USER

  """Get or list domain administrators"""
  READ_DOMAIN_USER

  """Create or edit domain administrators"""
  CHANGE_DOMAIN_USER

  """Get or list environment administrators"""
  READ_ENVIRONMENT_USER

  """Create or edit environment administrators"""
  CHANGE_ENVIRONMENT_USER

  """Get or list Api users"""
  READ_TENANT_API_USER

  """Create, edit or renew Api users"""
  CHANGE_TENANT_API_USER

  """Get or list services"""
  READ_SERVICE

  """Create, edit or delete services"""
  CHANGE_SERVICE

  """Get or list third party types"""
  READ_THIRD_PARTY_TYPE

  """Create, edit or delete third party types"""
  CHANGE_THIRD_PARTY_TYPE

  """Get or list third parties"""
  READ_THIRD_PARTY

  """Create, edit or delete third parties"""
  CHANGE_THIRD_PARTY

  """Get or list contact functions"""
  READ_CONTACT_FUNCTION

  """Create, edit or delete contact functions"""
  CHANGE_CONTACT_FUNCTION

  """Get or list contacts"""
  READ_CONTACT

  """Create, edit or delete contacts"""
  CHANGE_CONTACT

  """Get or list document types"""
  READ_DOCUMENT_TYPE

  """Create, edit or delete document types"""
  CHANGE_DOCUMENT_TYPE

  """Get or list documents sent to the user"""
  READ_DOCUMENT

  """Get or list documents sent to the service of the user"""
  READ_DOCUMENT_ON_SERVICE

  """Create, edit or delete documents"""
  CHANGE_DOCUMENT

  """Get or list tenants with internal info"""
  READ_TENANT_EDC_OMS_INFO

  """Create or edit tenant internal info"""
  CHANGE_TENANT_EDC_OMS_INFO

  """Get or list products"""
  READ_PRODUCT

  """Create or edit products"""
  CHANGE_PRODUCT

  """Get or list product installs"""
  READ_PRODUCT_INSTALL

  """Create or edit product installs"""
  CHANGE_PRODUCT_INSTALL

  """Get or list configurations"""
  READ_CONFIGURATION

  """Create or edit configurations"""
  CHANGE_CONFIGURATION

  """Get or list notes"""
  READ_NOTE

  """Create or edit notes"""
  CHANGE_NOTE

  """Get or list OMS resources"""
  READ_OMS_RESOURCES

  """Create or edit OMS resources"""
  CHANGE_OMS_RESOURCES

  """Synchronize EDC resources"""
  SYNCHRONIZE_EDC_RESOURCES

  """Create or edit PowerBi auth token"""
  CHANGE_POWER_BI_AUTH_TOKEN

  """Validate invited user"""
  VALIDATE_USER

  """Get or list list of values"""
  READ_LIST_OF_VALUES

  """Create, edit or delete list of values"""
  CHANGE_LIST_OF_VALUES

  """Get or list metadatas"""
  READ_METADATA

  """Create, edit or delete metadatas"""
  CHANGE_METADATA

  """Get or list dashboards"""
  READ_DASHBOARD

  """Create, edit or delete dashboards"""
  CHANGE_DASHBOARD

  """Get or list documentJobs"""
  READ_DOCUMENT_JOB

  """Create documentJob"""
  CHANGE_DOCUMENT_JOB

  """Get or list jobMessages"""
  READ_JOB_MESSAGE

  """Create, edit or delete jobMessage"""
  CHANGE_JOB_MESSAGE

  """Get or list activities"""
  READ_ACTIVITY

  """Create, edit or delete activities"""
  CHANGE_ACTIVITY

  """Get or list template structures"""
  READ_TEMPLATE_STRUCTURE

  """Create, edit or delete template structures"""
  CHANGE_TEMPLATE_STRUCTURE

  """Get or list template contents"""
  READ_TEMPLATE_CONTENT

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_CONTENT

  """Get or list postalJobs"""
  READ_POSTAL_JOB

  """Create postalJob"""
  CHANGE_POSTAL_JOB

  """Get or list Domain Api users"""
  READ_DOMAIN_API_USER

  """Create, edit or renew Domain Api users"""
  CHANGE_DOMAIN_API_USER

  """Get or list Environment Api users"""
  READ_ENVIRONMENT_API_USER

  """Create, edit or renew Environment Api users"""
  CHANGE_ENVIRONMENT_API_USER

  """Mark document as read"""
  READ_CLICKED_LINK_DOCUMENT

  """Read clicked link document"""
  MARK_DOCUMENT_AS_READ

  """Create, edit or delete document links"""
  CHANGE_CLICKED_LINK_DOCUMENT

  """Resend document to chorusRight"""
  RESEND_DOCUMENT

  """Complete document"""
  COMPLETE_DOCUMENT

  """RelaunchJobMessage"""
  RELAUNCH_JOB_MESSAGE

  """Get or list template variables configuration"""
  READ_TEMPLATE_VARIABLE_CONFIGURATION

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_VARIABLE_CONFIGURATION

  """CancelJobMessage"""
  CANCEL_JOB_MESSAGE

  """Get or list postal parameter configurations"""
  READ_POSTAL_PARAMETER_CONFIGURATION

  """Create, edit or delete postal parameter configurations"""
  CHANGE_POSTAL_PARAMETER_CONFIGURATION

  """Get or list status actions"""
  READ_STATUS_ACTION

  """Get or list callback configurations"""
  READ_CALLBACK_CONFIGURATION

  """Create, edit or delete callback configurations"""
  CHANGE_CALLBACK_CONFIGURATION

  """Get or list api routing configurations"""
  READ_ROUTING_CONFIGURATION

  """Create, edit or delete api routing configurations"""
  CHANGE_ROUTING_CONFIGURATION

  """Edit Tenant postal config"""
  EDIT_TENANT_POSTAL_CONFIG

  """Get or list data file action"""
  READ_DATA_FILE_ACTION

  """Create, edit or delete data file action"""
  CHANGE_DATA_FILE_ACTION
}

type RightValue {
  right: RightType!
  value: Boolean!
}

input RightValueInput {
  right: RightType!
  value: Boolean!
}

type Role {
  profile: UserProfile!
  environmentId: String
  environmentName: String
  domainId: String
  domainName: String
  tenantId: String
  tenantName: String
  rights: [RightValue]
  lastConnectionDate: DateTime
  productAccesses: [ProductAccess]
  isEnabled: Boolean!
}

input RoleInput {
  profile: UserProfile!
  environmentId: String
  domainId: String
  tenantId: String
  rights: [RightValueInput]
  productAccesses: [ProductAccessInput]
  isEnabled: Boolean
}

enum SortDirection {
  ASCENDING
  DESCENDING
}

enum StringFilterOperator {
  EQUAL
  NOT_EQUAL
  START_WITH
  NOT_START_WITH
  END_WITH
  NOT_END_WITH
  CONTAIN
  NOT_CONTAIN
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IN_ARRAY
  IS_NULL
  IS_NOT_NULL
}

type Tenant {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  environmentId: String!
  domainId: String!
  name: String!
  email: String
  phone: String
  isEnabled: Boolean!
  address: PostalAddress
  omsServiceAccount: OmsUserAccount
  edcServiceAccount: EdcUserAccount
  authorizedProductIds: [String]
  emailConfig: EmailConfig
  chorusB2GConfig: ChorusB2GConfig
  postalConfig: PostalConfiguration
}

input TenantBoolFilter {
  field: TenantBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum TenantBoolFilterField {
  IS_ENABLED
}

input TenantInput {
  id: String
  name: String!
  email: String
  phone: String
  isEnabled: Boolean
  address: PostalAddressInput
  omsServiceAccount: OmsUserAccountInput
  edcServiceAccount: EdcUserAccountInput
  authorizedProductIds: [String]
  emailConfig: EmailConfigInput
  chorusB2GConfig: ChorusB2GConfigInput
  postalConfig: PostalConfigurationInput
}

input TenantIntFilter {
  field: TenantIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum TenantIntFilterField {
  OMS_SERVICE_ACCOUNT_CUSTOMER_NUMBER
}

input TenantQueryParams {
  sortField: TenantSortField
  sortDirection: SortDirection
  stringFilters: [TenantStringFilter]
  intFilters: [TenantIntFilter]
  boolFilters: [TenantBoolFilter]
}

enum TenantSortField {
  NAME
  EMAIL
  PHONE
  ENVIRONMENT_ID
  DOMAIN_ID
  IS_ENABLED
  OMS_SERVICE_ACCOUNT_CUSTOMER_NUMBER
  EDC_SERVICE_ACCOUNT_GED_SCHEMA
}

input TenantStringFilter {
  field: TenantStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum TenantStringFilterField {
  NAME
  EMAIL
  PHONE
  ENVIRONMENT_ID
  DOMAIN_ID
  EDC_SERVICE_ACCOUNT_GED_SCHEMA
  ADDRESS_ADDRESS_LINE_1
  ADDRESS_ADDRESS_LINE_2
  ADDRESS_POSTAL_CODE
  ADDRESS_CITY
  ADDRESS_STATE
  ADDRESS_COUNTRY
}

type TenantTypeConnection {
  edges: [Tenant]
  pageInfo: PageInfo
}

type User {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  azureId: String
  email: String
  isEnabled: Boolean!
  isInvited: Boolean!
  roles: [Role]
}

enum UserProfile {
  STANDARD_USER
  DOMAIN_ADMINISTRATOR
  ENVIRONMENT_ADMINISTRATOR
  ADMINISTRATOR
  TENANT_RECEIVER
  WEBSITE_ADMINISTRATOR
}
