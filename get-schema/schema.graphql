schema {
  query: BusinessSchemaQuery
  mutation: BusinessSchemaMutation
}

type Activity {
  creationDate: DateTime
  lastModificationDate: DateTime
  id: String!
  date: DateTime!
  activityType: ActivityCategory!
  detail: String
  source: ActivitySource
  producer: IdNameType
  consumer: IdNameType
  additionalFields: [KeyValue]
}

input ActivityActivityActorTypeEnumFilter {
  field: ActivityActorTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: ActivityActorType!
  filterValue2: ActivityActorType
}

input ActivityActivityCategoryEnumFilter {
  field: ActivityCategoryFilterField!
  operator: NumberFilterOperator!
  filterValue1: ActivityCategory!
  filterValue2: ActivityCategory
}

input ActivityActivitySourceTypeEnumFilter {
  field: ActivitySourceTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: ActivitySourceType!
  filterValue2: ActivitySourceType
}

enum ActivityActorType {
  SYSTEM
  EXTERNAL
  SERVICE
  TENANT_USER
  THIRD_PARTY
  CONTACT
  EMAIL_ADDRESS
  POSTAL_ADDRESS
}

enum ActivityActorTypeFilterField {
  PRODUCER_TYPE
  CONSUMER_TYPE
}

enum ActivityCategory {
  DOCUMENT_SIGNED
  DOCUMENT_ARCHIVED
  DOCUMENT_CANCELED
  DOCUMENT_READ
  DOCUMENT_METADATA_EDITED
  DOCUMENT_ATTACHMENTS_ADDED
  JOB_CREATED
  JOB_LAUNCHED
  JOB_PROCESSING
  JOB_PRE_PROCESSED
  JOB_COMPLETED
  NOTIFICATION_SENT
  CHORUS_B_2_G_SENT
  CHORUS_B_2_G_STATUS_CHANGED
  CHORUS_B_2_G_COMPLETED
  JOB_MESSAGE_CANCELED
  JOB_MESSAGE_RELAUNCHED
  ROUTING
  EXTERNAL_PROCESS
  ERROR
}

enum ActivityCategoryFilterField {
  ACTIVITY_TYPE
}

input ActivityDateFilter {
  field: ActivityDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum ActivityDateFilterField {
  DATE
}

input ActivityQueryParams {
  sortField: ActivitySortField
  sortDirection: SortDirection
  stringFilters: [ActivityStringFilter]
  dateFilters: [ActivityDateFilter]
  eventTypeFilters: [ActivityActivityCategoryEnumFilter]
  sourceTypeFilters: [ActivityActivitySourceTypeEnumFilter]
  actorTypeFilters: [ActivityActivityActorTypeEnumFilter]
}

enum ActivityResultFilterField {
  ACTIVITY_RESULT
}

enum ActivityResults {
  ALL
  ERROR_ONLY
  OK_ONLY
}

enum ActivitySortField {
  ACTIVITY_TYPE
  DATE
  PRODUCER
  CONSUMER
  DETAIL
  DOCUMENT_SOURCE_NAME
  JOB_SOURCE_NAME
  JOB_MESSAGE_SOURCE_NAME
  CONTACT_SOURCE_NAME
  THIRD_PARTY_SOURCE_NAME
  TENANT_USER_SOURCE_NAME
  TENANT_SOURCE_NAME
}

type ActivitySource {
  document: IdName
  job: IdName
  jobMessage: IdName
  contact: IdName
  thirdParty: IdName
  tenantUser: IdName
  tenant: IdName
}

enum ActivitySourceType {
  DOCUMENT
  JOB
  JOB_MESSAGE
  CONTACT
  THIRD_PARTY
  TENANT_USER
  TENANT
}

enum ActivitySourceTypeFilterField {
  SOURCE_TYPE
}

input ActivityStringFilter {
  field: ActivityStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ActivityStringFilterField {
  PRODUCER_ID
  PRODUCER_NAME
  CONSUMER_ID
  CONSUMER_NAME
  DOCUMENT_SOURCE_ID
  DOCUMENT_SOURCE_NAME
  JOB_SOURCE_ID
  JOB_SOURCE_NAME
  JOB_MESSAGE_SOURCE_ID
  JOB_MESSAGE_SOURCE_NAME
  CONTACT_SOURCE_ID
  CONTACT_SOURCE_NAME
  THIRD_PARTY_SOURCE_ID
  THIRD_PARTY_SOURCE_NAME
  TENANT_USER_SOURCE_ID
  TENANT_USER_SOURCE_NAME
  TENANT_SOURCE_ID
  TENANT_SOURCE_NAME
}

type ActivityTypeConnection {
  edges: [Activity]
  pageInfo: PageInfo
}

type ApiDomainUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  keyPreview: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
  authorizedIPs: [String]
  domainId: String!
  domainName: String!
}

input ApiDomainUserBoolFilter {
  field: ApiDomainUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ApiDomainUserBoolFilterField {
  IS_ENABLED
}

input ApiDomainUserDateFilter {
  field: ApiDomainUserDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum ApiDomainUserDateFilterField {
  CREATION_DATE
  LAST_CONNECTION_DATE
}

input ApiDomainUserInput {
  id: String
  name: String!
  isEnabled: Boolean
  authorizedIPs: [String]
  domainId: String!
}

input ApiDomainUserQueryParams {
  sortField: ApiDomainUserSortField
  sortDirection: SortDirection
  stringFilters: [ApiDomainUserStringFilter]
  dateFilters: [ApiDomainUserDateFilter]
  boolFilters: [ApiDomainUserBoolFilter]
}

enum ApiDomainUserSortField {
  NAME
  CREATION_USER_LABEL
  CREATION_DATE
  LAST_CONNECTION_DATE
  IS_ENABLED
  DOMAIN_ID
}

input ApiDomainUserStringFilter {
  field: ApiDomainUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ApiDomainUserStringFilterField {
  NAME
  CREATION_USER_ID
  CREATION_USER_LABEL
  DOMAIN_ID
}

type ApiDomainUserTypeConnection {
  edges: [ApiDomainUser]
  pageInfo: PageInfo
}

type ApiEnvironmentUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  keyPreview: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
  authorizedIPs: [String]
}

input ApiEnvironmentUserBoolFilter {
  field: ApiEnvironmentUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ApiEnvironmentUserBoolFilterField {
  IS_ENABLED
}

input ApiEnvironmentUserDateFilter {
  field: ApiEnvironmentUserDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum ApiEnvironmentUserDateFilterField {
  CREATION_DATE
  LAST_CONNECTION_DATE
}

input ApiEnvironmentUserInput {
  id: String
  name: String!
  isEnabled: Boolean
  authorizedIPs: [String]
}

input ApiEnvironmentUserQueryParams {
  sortField: ApiEnvironmentUserSortField
  sortDirection: SortDirection
  stringFilters: [ApiEnvironmentUserStringFilter]
  dateFilters: [ApiEnvironmentUserDateFilter]
  boolFilters: [ApiEnvironmentUserBoolFilter]
}

enum ApiEnvironmentUserSortField {
  NAME
  CREATION_USER_LABEL
  CREATION_DATE
  LAST_CONNECTION_DATE
  IS_ENABLED
}

input ApiEnvironmentUserStringFilter {
  field: ApiEnvironmentUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ApiEnvironmentUserStringFilterField {
  NAME
  CREATION_USER_ID
  CREATION_USER_LABEL
}

type ApiEnvironmentUserTypeConnection {
  edges: [ApiEnvironmentUser]
  pageInfo: PageInfo
}

type ApiRoutingConfiguration {
  format: String!
  action: String!
}

input ApiRoutingConfigurationInput {
  format: String!
  action: String!
}

type ApiTenantUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  keyPreview: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
  authorizedIPs: [String]
  tenantId: String!
}

input ApiTenantUserBoolFilter {
  field: ApiTenantUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ApiTenantUserBoolFilterField {
  IS_ENABLED
}

input ApiTenantUserDateFilter {
  field: ApiTenantUserDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum ApiTenantUserDateFilterField {
  CREATION_DATE
  LAST_CONNECTION_DATE
}

input ApiTenantUserInput {
  id: String
  name: String!
  isEnabled: Boolean
  authorizedIPs: [String]
}

input ApiTenantUserQueryParams {
  sortField: ApiTenantUserSortField
  sortDirection: SortDirection
  stringFilters: [ApiTenantUserStringFilter]
  dateFilters: [ApiTenantUserDateFilter]
  boolFilters: [ApiTenantUserBoolFilter]
}

enum ApiTenantUserSortField {
  NAME
  CREATION_USER_LABEL
  CREATION_DATE
  LAST_CONNECTION_DATE
  IS_ENABLED
  TENANT_ID
}

input ApiTenantUserStringFilter {
  field: ApiTenantUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ApiTenantUserStringFilterField {
  NAME
  CREATION_USER_ID
  CREATION_USER_LABEL
  TENANT_ID
}

type ApiTenantUserTypeConnection {
  edges: [ApiTenantUser]
  pageInfo: PageInfo
}

type ArchiveConfiguration {
  provider: ArchiverProvider!
  billingMode: ArchiveConfigurationBillingMode!
  durationInMonth: Int!
  archiveMetadata: Boolean!
}

enum ArchiveConfigurationBillingMode {
  GIGA
  FILES
}

input ArchiveConfigurationInput {
  provider: ArchiverProvider!
  billingMode: ArchiveConfigurationBillingMode!
  archiveMetadata: Boolean!
  durationInMonth: Int!
}

enum ArchiverProvider {
  DOCOON
  XELIANS
}

enum ArrayElementFilterOperator {
  EQUAL
  NOT_EQUAL
  START_WITH
  NOT_START_WITH
  END_WITH
  NOT_END_WITH
  CONTAIN
  NOT_CONTAIN
  BETWEEN
  GREATER_THAN_OR_EQUAL
  GREATER_THAN
  LOWER_THAN_OR_EQUAL
  LOWER_THAN
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IN_ARRAY
  IS_NULL
  IS_NOT_NULL
}

input AttachmentInput {
  existingDocumentId: String
  newDocument: DocumentInput
}

enum BoolFilterOperator {
  EQUAL
  NOT_EQUAL
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IS_NULL
  IS_NOT_NULL
}

type BusinessSchemaMutation {
  addApiDomainUser(item: ApiDomainUserInput!): ApiDomainUser
  editApiDomainUser(id: String!, item: ApiDomainUserInput!): ApiDomainUser
  renewApiDomainUser(id: String!): ApiDomainUser
  editApiDomainUserRight(apiUserId: String!, item: [DomainRightValueInput!]): [DomainRightValue!]
  addApiEnvironmentUser(item: ApiEnvironmentUserInput!): ApiEnvironmentUser
  editApiEnvironmentUser(id: String!, item: ApiEnvironmentUserInput!): ApiEnvironmentUser
  renewApiEnvironmentUser(id: String!): ApiEnvironmentUser
  editApiEnvironmentUserRight(apiUserId: String!, item: [EnvironmentRightValueInput!]): [EnvironmentRightValue!]
  addApiTenantUser(item: ApiTenantUserInput!, tenantId: String): ApiTenantUser
  editApiTenantUser(id: String!, item: ApiTenantUserInput!, tenantId: String): ApiTenantUser
  renewApiTenantUser(id: String!, tenantId: String): ApiTenantUser
  editApiTenantUserRight(apiUserId: String!, item: [TenantRightValueInput!]): [TenantRightValue!]
  addCallbackConfiguration(item: CallbackConfigurationInput!, tenantId: String): CallbackConfiguration
  editCallbackConfiguration(id: String!, item: CallbackConfigurationInput!, tenantId: String): CallbackConfiguration
  deleteCallbackConfiguration(id: String!, tenantId: String): Void
  addContactFunction(item: ContactFunctionInput!, tenantId: String): ContactFunction
  editContactFunction(id: String!, item: ContactFunctionInput!, tenantId: String): ContactFunction
  deleteContactFunction(id: String!, tenantId: String): Void
  addContact(item: ContactInput!, tenantId: String): Contact
  editContact(id: String!, item: ContactInput!, tenantId: String): Contact
  deleteContact(id: String!, tenantId: String): Void
  addDashboardRight(item: DashboardRightInput!): DashboardRight
  deleteDashboardRight(id: String!): Void
  addDataFileAction(item: DataFileActionInput!, tenantId: String): JobCreationResult
  addDocumentJob(item: DocumentJobInput!, tenantId: String): JobCreationResult
  addDocumentProbativeJob(item: DocumentProbativeJobInput!, tenantId: String): JobCreationResult
  readDocument(tenantId: String!, jobId: String!, jobMessageId: String!, documentId: String!): Void
  runActionOnDocument(tenantId: String, documentId: String!, options: DocumentActionOptions!): Void
  addDocumentType(item: DocumentTypeInput!, tenantId: String): DocumentType
  editDocumentType(id: String!, item: DocumentTypeInput!, tenantId: String): DocumentType
  deleteDocumentType(id: String!, tenantId: String): Void
  addDocumentTypeMetadata(documentTypeId: String!, item: MetadataConfigInput!, tenantId: String): DocumentType
  editDocumentTypeMetadata(documentTypeId: String!, code: String!, item: MetadataConfigInput!, tenantId: String): DocumentType
  deleteDocumentTypeMetadata(documentTypeId: String!, code: String!, tenantId: String): Void
  addDomainUser(item: DomainUserInput!): DomainUser
  editDomainUser(id: String!, item: DomainUserInput!): DomainUser
  resendInviteDomainUser(id: String!): Void
  validateDomainUser(key: String!): DomainUser
  editDomainUserRight(domainUserId: String!, item: [DomainRightValueInput!]): [DomainRightValue!]
  addEnvironmentUser(item: EnvironmentUserInput!): EnvironmentUser
  editEnvironmentUser(id: String!, item: EnvironmentUserInput!): EnvironmentUser
  resendInviteEnvironmentUser(id: String!): Void
  validateEnvironmentUser(key: String!): EnvironmentUser
  editEnvironmentUserRight(environmentUserId: String!, item: [EnvironmentRightValueInput!]): [EnvironmentRightValue!]
  editErrorQueueMessage(id: String!, item: ErrorQueueMessageInput!): ErrorQueueMessage
  addHostedDocumentFile(item: FileContentInput!, tenantId: String): FileContent
  deleteHostedDocumentFile(id: String!, tenantId: String): Void
  deleteHostedInboundFile(inboundFolder: String!, id: String!, tenantId: String): Void
  addHostedListFile(item: FileContentInput!, tenantId: String): FileContent
  deleteHostedListFile(id: String!, tenantId: String): Void
  deleteHostedReportFile(id: String!, tenantId: String): Void
  addIncomingEmailHistory(item: IncomingEmailHistoryInput!, tenantId: String): IncomingEmailHistory
  editIncomingEmailHistory(id: String!, item: IncomingEmailHistoryInput!, tenantId: String): IncomingEmailHistory
  deleteIncomingEmailHistory(id: String!, tenantId: String): Void
  runActionOnJobMessage(tenantId: String, jobMessageId: String!, options: JobMessageActionOptions!): Void
  relaunchJobMessage(item: RelaunchJobMessageOptionsInput!): Void
  addFaxJob(item: FaxJob!, tenantId: String): JobResult
  addSmsJob(item: SmsJob!, tenantId: String): JobResult
  addVoiceJob(item: VoiceJob!, tenantId: String): JobResult
  addPushJob(item: PushJob!, tenantId: String): JobResult
  addEmailJob(item: EmailJob!, tenantId: String): JobResult
  runActionOnJob(tenantId: String, jobId: String!, options: JobActionOptions!): Void
  addNote(item: NoteInput!, tenantId: String): Note
  editNote(id: String!, item: NoteInput!, tenantId: String): Note
  deleteNote(id: String!, tenantId: String): Void
  addPostalJob(item: PostalJobInput!, tenantId: String): JobCreationResult
  addPostalParameterConfiguration(item: PostalParameterConfigurationInput!, tenantId: String): PostalParameterConfiguration
  editPostalParameterConfiguration(id: String!, item: PostalParameterConfigurationInput!, tenantId: String): PostalParameterConfiguration
  deletePostalParameterConfiguration(id: String!, tenantId: String): Void
  addPowerBiAuthToken(id: String!): PowerBiAuthToken
  addRedirectEmailConfiguration(item: RedirectEmailConfigurationInput!, tenantId: String): RedirectEmailConfiguration
  editRedirectEmailConfiguration(id: String!, item: RedirectEmailConfigurationInput!, tenantId: String): RedirectEmailConfiguration
  deleteRedirectEmailConfiguration(id: String!, tenantId: String): Void
  addRoutingConfiguration(item: RoutingConfigurationInput!): RoutingConfiguration
  editRoutingConfiguration(id: String!, item: RoutingConfigurationInput!): RoutingConfiguration
  deleteRoutingConfiguration(id: String!): Void
  addService(item: ServiceInput!, tenantId: String): Service
  editService(id: String!, item: ServiceInput!, tenantId: String): Service
  deleteService(id: String!, tenantId: String): Void
  addTemplateContent(item: TemplateContentInput!, tenantId: String): TemplateContent
  editTemplateContent(id: String!, item: TemplateContentInput!, tenantId: String): TemplateContent
  deleteTemplateContent(id: String!, tenantId: String): Void
  addTemplateStructure(item: TemplateStructureInput!, tenantId: String): TemplateStructure
  editTemplateStructure(id: String!, item: TemplateStructureInput!, tenantId: String): TemplateStructure
  deleteTemplateStructure(id: String!, tenantId: String): Void
  addTemporaryDocumentFile(item: TemporaryDocumentFileInput!, tenantId: String): String
  addTemporaryDocument(item: TemporaryDocumentContentInput!): TemporaryDocumentContent
  deleteTemporaryDocument(id: String!): Void
  addTenantUser(item: TenantUserInput!, tenantId: String): TenantUser
  editTenantUser(id: String!, item: TenantUserInput!, tenantId: String): TenantUser
  resendInviteTenantUser(id: String!, tenantId: String): Void
  validateTenantUser(key: String!): TenantUser
  editTenantUserRight(tenantUserId: String!, item: [TenantRightValueInput!], tenantId: String): [TenantRightValue!]
  addThirdParty(item: ThirdPartyInput!, tenantId: String): ThirdParty
  editThirdParty(id: String!, item: ThirdPartyInput!, tenantId: String): ThirdParty
  deleteThirdParty(id: String!, tenantId: String): Void
  addThirdPartyType(item: ThirdPartyTypeInput!, tenantId: String): ThirdPartyType
  editThirdPartyType(id: String!, item: ThirdPartyTypeInput!, tenantId: String): ThirdPartyType
  deleteThirdPartyType(id: String!, tenantId: String): Void
}

type BusinessSchemaQuery {
  schema: String
  activityItems(idList: [String!]!, tenantId: String, language: Language): [Activity]
  activityList(params: ActivityQueryParams, after: String, tenantId: String, language: Language): ActivityTypeConnection
  apiDomainUserItems(idList: [String!]!): [ApiDomainUser]
  apiDomainUserList(params: ApiDomainUserQueryParams, after: String): ApiDomainUserTypeConnection
  apiDomainUserRightList(apiUserId: String!, params: RightValueQueryParams, after: String): DomainRightValueTypeConnection
  apiEnvironmentUserItems(idList: [String!]!): [ApiEnvironmentUser]
  apiEnvironmentUserList(params: ApiEnvironmentUserQueryParams, after: String): ApiEnvironmentUserTypeConnection
  apiEnvironmentUserRightList(apiUserId: String!, params: RightValueQueryParams, after: String): EnvironmentRightValueTypeConnection
  apiTenantUserItems(idList: [String!]!, tenantId: String): [ApiTenantUser]
  apiTenantUserList(params: ApiTenantUserQueryParams, after: String, tenantId: String): ApiTenantUserTypeConnection
  apiTenantUserRightList(apiUserId: String!, params: RightValueQueryParams, after: String): TenantRightValueTypeConnection
  callbackConfigurationItems(idList: [String!]!, tenantId: String): [CallbackConfiguration]
  callbackConfigurationList(params: CallbackConfigurationQueryParams, after: String, tenantId: String): CallbackConfigurationTypeConnection
  callbackConfigurations(activityCategory: ActivityCategory, tenantId: String): [CallbackConfiguration]
  chorusB2GProvidersList(login: String!, password: String!, serverType: ChorusServerType!): [ChorusProviderIdName]
  clickedLinkDocumentItems(id: String!): ClickedLinkDocument
  contactFunctionItems(idList: [String!]!, tenantId: String, language: Language): [ContactFunction]
  contactFunctionList(params: ContactFunctionQueryParams, after: String, tenantId: String): ContactFunctionTypeConnection
  contactFunctionSystemList(params: ContactFunctionQueryParams, after: String, language: Language): ContactFunctionTypeConnection
  contactItems(idList: [String!]!, tenantId: String): [Contact]
  contactList(params: ContactQueryParams, after: String, tenantId: String): ContactTypeConnection
  dashboardItems(idList: [String!]!, language: Language): [Dashboard]
  dashboardList(params: DashboardQueryParams, after: String, language: Language): DashboardTypeConnection
  dashboardRightItems(idList: [String!]!): [DashboardRight]
  dashboardRightList(params: DashboardRightQueryParams, after: String): DashboardRightTypeConnection
  documentCountList(tenantId: String): DocumentCount
  documentCountStatisticsList(params: DocumentCountStatisticsQueryParams, tenantId: String): [DocumentCountStatistics]
  documentJobItems(idList: [String!]!, tenantId: String): [DocumentJob]
  documentJobList(params: DocumentJobQueryParams, after: String, tenantId: String): DocumentJobTypeConnection
  documentProbativeJobItems(idList: [String!]!, tenantId: String): [DocumentProbativeJob]
  documentProbativeJobList(params: DocumentProbativeJobQueryParams, after: String, tenantId: String): DocumentProbativeJobTypeConnection
  documentItems(idList: [String!]!, tenantId: String): [Document]
  documentList(params: DocumentQueryParams, after: String, tenantId: String): DocumentTypeConnection
  documentSizeStatistics(params: DocumentSizeStatisticsQueryParams, tenantId: String): DocumentSizeStatistics
  documentSubTypeItems(idList: [String!]!, language: Language): [DocumentSubType]
  documentSubTypeList(params: DocumentSubTypeQueryParams, after: String, language: Language): DocumentSubTypeTypeConnection
  documentTypeItems(idList: [String!]!, tenantId: String): [DocumentType]
  documentTypeList(params: DocumentTypeQueryParams, after: String, tenantId: String): DocumentTypeTypeConnection
  domainUserItems(idList: [String!]!): [DomainUser]
  domainUserList(params: DomainUserQueryParams, after: String): DomainUserTypeConnection
  domainUserRightList(domainUserId: String!, params: RightValueQueryParams, after: String): DomainRightValueTypeConnection
  environmentUserItems(idList: [String!]!): [EnvironmentUser]
  environmentUserList(params: EnvironmentUserQueryParams, after: String): EnvironmentUserTypeConnection
  environmentUserRightList(environmentUserId: String!, params: RightValueQueryParams, after: String): EnvironmentRightValueTypeConnection
  errorQueueMessageItems(idList: [String!]!): [ErrorQueueMessage]
  errorQueueMessageList(params: ErrorQueueMessageQueryParams, after: String): ErrorQueueMessageTypeConnection
  hostedDocumentFileItems(idList: [String!]!, tenantId: String): [FileContent]
  hostedDocumentFileList(after: String, tenantId: String): FileHeaderTypeConnection
  hostedInboundFileItems(inboundFolder: String!, idList: [String!]!, tenantId: String): [FileContent]
  hostedInboundFileList(inboundFolder: String!, after: String, tenantId: String): FileHeaderTypeConnection
  hostedListFileItems(idList: [String!]!, tenantId: String): [FileContent]
  hostedListFileList(after: String, tenantId: String): FileHeaderTypeConnection
  hostedReportFileItems(idList: [String!]!, tenantId: String): [FileContent]
  hostedReportFileList(after: String, tenantId: String): FileHeaderTypeConnection
  inboundFaxList(params: InboundFaxQueryParams, after: String, tenantId: String): InboundFaxTypeConnection
  inboundSmsList(params: InboundSmsQueryParams, after: String, tenantId: String): InboundSmsTypeConnection
  incomingEmailHistoryItems(idList: [String!]!, tenantId: String): [IncomingEmailHistory]
  incomingEmailHistoryList(params: IncomingEmailHistoryQueryParams, after: String, tenantId: String): IncomingEmailHistoryTypeConnection
  jobItemItems(idList: [JobItemId]!, tenantId: String): [JobItem]
  jobItemList(params: JobItemQueryParams, after: String, tenantId: String): JobItemTypeConnection
  jobMessageItems(idList: [String!]!, tenantId: String): [JobMessage]
  jobMessageList(params: JobMessageQueryParams, after: String, tenantId: String): JobMessageTypeConnection
  jobItems(idList: [String!]!, tenantId: String): [Job]
  jobList(params: JobQueryParams, after: String, tenantId: String): JobTypeConnection
  processingJobCountStatistics(tenantId: String): JobCountStatistics
  jobSummaryItems(idList: [Int!]!, tenantId: String): [JobSummary]
  jobSummaryList(params: JobSummaryQueryParams, after: String, tenantId: String): JobSummaryTypeConnection
  natureItems(idList: [String!]!, language: Language): [Nature]
  natureList(params: NatureQueryParams, after: String, language: Language): NatureTypeConnection
  noteItems(idList: [String!]!, tenantId: String): [Note]
  noteList(params: NoteQueryParams, after: String, tenantId: String): NoteTypeConnection
  postalJobItems(idList: [String!]!, tenantId: String): [PostalJob]
  postalJobList(params: PostalJobQueryParams, after: String, tenantId: String): PostalJobTypeConnection
  postalParameterConfigurationItems(idList: [String!]!, tenantId: String): [PostalParameterConfiguration]
  postalParameterConfigurationList(params: PostalParameterConfigurationQueryParams, after: String, tenantId: String): PostalParameterConfigurationTypeConnection
  redirectEmailConfigurationItems(idList: [String!]!, tenantId: String): [RedirectEmailConfiguration]
  redirectEmailConfigurationList(params: RedirectEmailConfigurationQueryParams, after: String, tenantId: String): RedirectEmailConfigurationTypeConnection
  rightInitialValueList(profile: UserProfile!, params: RightInitialValueQueryParams, after: String): RightInitialValueTypeConnection
  routingConfigurationItems(idList: [String!]!): [RoutingConfiguration]
  routingConfigurationList(params: RoutingConfigurationQueryParams, after: String): RoutingConfigurationTypeConnection
  serviceItems(idList: [String!]!, tenantId: String): [Service]
  serviceList(params: ServiceQueryParams, after: String, tenantId: String): ServiceTypeConnection
  statusActionList(params: StatusActionQueryParams, after: String): StatusActionTypeConnection
  templateContentItems(idList: [String!]!, tenantId: String, language: Language): [TemplateContent]
  templateContentList(params: TemplateContentQueryParams, after: String, tenantId: String, language: Language): TemplateContentTypeConnection
  templateStructureItems(idList: [String!]!, tenantId: String, language: Language): [TemplateStructure]
  templateStructureList(params: TemplateStructureQueryParams, after: String, tenantId: String, language: Language): TemplateStructureTypeConnection
  templateVariableList(notificationType: TemplateContentNotificationType!, domainId: String, ancestorIds: [String], tenantId: String, serviceId: String, natureId: String, documentTypeId: String): [TemplateVariable]
  temporaryDocumentItems(idList: [String!]!): [TemporaryDocumentContent]
  temporaryDocumentList(params: TemporaryDocumentHeaderQueryParams, after: String): TemporaryDocumentHeaderTypeConnection
  tenantUserItems(idList: [String!]!, tenantId: String): [TenantUser]
  tenantUserList(params: TenantUserQueryParams, after: String, tenantId: String): TenantUserTypeConnection
  tenantUserRightList(tenantUserId: String!, params: RightValueQueryParams, after: String, tenantId: String): TenantRightValueTypeConnection
  test: String
  thirdPartyItems(idList: [String!]!, tenantId: String): [ThirdParty]
  thirdPartyList(params: ThirdPartyQueryParams, after: String, tenantId: String): ThirdPartyTypeConnection
  thirdPartyTypeItems(idList: [String!]!, tenantId: String, language: Language): [ThirdPartyType]
  thirdPartyTypeList(params: ThirdPartyTypeQueryParams, after: String, tenantId: String): ThirdPartyTypeTypeConnection
  thirdPartyTypeSystemList(params: ThirdPartyTypeQueryParams, after: String, language: Language): ThirdPartyTypeTypeConnection
}

scalar Byte

enum CallbackActivityCategoryFilterField {
  ACTIVITY_CATEGORY
}

type CallbackConfiguration {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  activityCategories: [ActivityCategory!]!
  activityResult: ActivityResults!
  communicationMode: CommunicationModes!
  destination: String!
  isEnabled: Boolean!
  headers: [KeyValuePair]
}

input CallbackConfigurationActivityCategoryEnumFilter {
  field: CallbackActivityCategoryFilterField!
  operator: NumberFilterOperator!
  filterValue1: ActivityCategory!
  filterValue2: ActivityCategory
}

input CallbackConfigurationActivityResultsEnumFilter {
  field: ActivityResultFilterField!
  operator: NumberFilterOperator!
  filterValue1: ActivityResults!
  filterValue2: ActivityResults
}

input CallbackConfigurationBoolFilter {
  field: CallbackConfigurationBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum CallbackConfigurationBoolFilterField {
  IS_ENABLED
}

input CallbackConfigurationCommunicationModesEnumFilter {
  field: CommunicationModeFilterField!
  operator: NumberFilterOperator!
  filterValue1: CommunicationModes!
  filterValue2: CommunicationModes
}

input CallbackConfigurationInput {
  id: String
  tenantId: String!
  activityCategories: [ActivityCategory!]
  activityResult: ActivityResults!
  communicationMode: CommunicationModes!
  destination: String!
  isEnabled: Boolean
  headers: [KeyValuePairInput]
}

input CallbackConfigurationQueryParams {
  sortField: CallbackConfigurationSortField
  sortDirection: SortDirection
  stringFilters: [CallbackConfigurationStringFilter]
  boolFilters: [CallbackConfigurationBoolFilter]
  activityCategoryFilters: [CallbackConfigurationActivityCategoryEnumFilter]
  activityResultFilters: [CallbackConfigurationActivityResultsEnumFilter]
  communicationModeFilters: [CallbackConfigurationCommunicationModesEnumFilter]
}

enum CallbackConfigurationSortField {
  ID
  TENANT_ID
  ACTIVITY_RESULT
  COMMUNICATION_MODE
  DESTINATION
}

input CallbackConfigurationStringFilter {
  field: CallbackConfigurationStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum CallbackConfigurationStringFilterField {
  TENANT_ID
}

type CallbackConfigurationTypeConnection {
  edges: [CallbackConfiguration]
  pageInfo: PageInfo
}

type ChorusB2GAddress {
  name: String!
}

input ChorusB2GAdhocRecipientInput {
  name: String!
}

type ChorusB2GConfig {
  login: String!
  password: String!
  serverType: ChorusServerType!
  providerId: String!
  recalculate: Boolean!
  isTestMode: Boolean!
}

input ChorusB2GConfigInput {
  login: String!
  password: String!
  serverType: ChorusServerType!
  providerId: String!
  recalculate: Boolean!
  isTestMode: Boolean!
}

enum ChorusB2GErrorType {
  MISSING_INVOICE_NUMBER
  MISSING_INVOICE_DATE
  MISSING_SIRET
  MISSING_CHORUS_PROVIDER_ID
  MISSING_VALIDER_INFORMATIONS
  MISSING_CURRENCY
  MISSING_TAX_DUE_DATE_TYPE
  MISSING_EXEMPTION_REASON
  MISSING_ORIGINAL_INVOICE_NUMBER
  MISSING_VAT_INFORMATIONS
  MISSING_TAX_TOTAL_AMOUNT
  MISSING_DISCOUNT_REASON
  MISSING_GRAND_TOTAL_AMOUNT
  MISSING_ATTACHMENT_TYPE
  INVALID_SIRET
  INVALID_STRUCTURE
  MISSING_SERVICE_CODE
  INVALID_SERVICE_CODE
  MISSING_PURCHASE_ORDER_NUMBER
  MISSING_SERVICE_CODE_OR_PURCHASE_ORDER_NUMBER
  RECEIVER_IS_ONLY_MOA
  INVALID_EXEMPTION_REASON
  INVALID_ATTACHMENT_TYPE
  UNKNOWN_ERROR
  INVOICE_ALREADY_EXISTS
}

type ChorusB2GValidationError {
  errorString: String!
  errorType: ChorusB2GErrorType!
}

type ChorusProviderIdName {
  providerId: String!
  providerName: String!
}

enum ChorusServerType {
  QUALIF
  PROD
}

type ClickedLinkDocument {
  id: String!
  tenantId: String!
  jobId: String!
  jobMessageId: String!
  documentName: String!
  expirationDate: DateTime
  isCountExpired: Boolean!
  content: String!
  documentId: String!
}

enum CommunicationModeFilterField {
  COMMUNICATION_MODE
}

enum CommunicationModes {
  HTTP
  EMAIL
  QUEUE
}

type Contact {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  civility: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  culture: String!
  timeZone: String!
  isFavorite: Boolean!
  isPrincipal: Boolean!
  documentTransmissionMode: DocumentTransmissionMode!
  functionIds: [String]
  thirdPartyId: String
  thirdPartyName: String
  isEnabled: Boolean!
}

input ContactBoolFilter {
  field: ContactBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ContactBoolFilterField {
  IS_ENABLED
  IS_FAVORITE
  IS_PRINCIPAL
}

type ContactFunction {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  code: String!
  name: String!
  ownerId: String
  ownerType: ContactFunctionOwnerType!
  isEnabled: Boolean!
}

input ContactFunctionBoolFilter {
  field: ContactFunctionBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ContactFunctionBoolFilterField {
  IS_ENABLED
}

input ContactFunctionInput {
  id: String
  code: String!
  name: String!
  ownerId: String
  ownerType: ContactFunctionOwnerType!
  isEnabled: Boolean
}

enum ContactFunctionOwnerType {
  SYSTEM
  TENANT
}

input ContactFunctionQueryParams {
  sortField: ContactFunctionSortField
  sortDirection: SortDirection
  stringFilters: [ContactFunctionStringFilter]
  boolFilters: [ContactFunctionBoolFilter]
}

enum ContactFunctionSortField {
  CODE
  NAME
  OWNER_TYPE
  IS_ENABLED
}

input ContactFunctionStringFilter {
  field: ContactFunctionStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ContactFunctionStringFilterField {
  CODE
  NAME
}

type ContactFunctionTypeConnection {
  edges: [ContactFunction]
  pageInfo: PageInfo
}

input ContactInput {
  id: String
  civility: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  culture: String
  timeZone: String
  isFavorite: Boolean
  isPrincipal: Boolean
  documentTransmissionMode: DocumentTransmissionMode
  functionIds: [String!]
  thirdPartyId: String!
  isEnabled: Boolean
}

input ContactQueryParams {
  sortField: ContactSortField
  sortDirection: SortDirection
  stringFilters: [ContactStringFilter]
  boolFilters: [ContactBoolFilter]
}

input ContactRecipientInput {
  contactId: String!
}

enum ContactSortField {
  CIVILITY
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  PHONE
  CULTURE
  TIME_ZONE
  DOCUMENT_TRANSMISSION_MODE
  IS_FAVORITE
  IS_PRINCIPAL
  IS_ENABLED
  THIRD_PARTY_ID
  THIRD_PARTY_NAME
}

input ContactStringFilter {
  field: ContactStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ContactStringFilterField {
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  THIRD_PARTY_ID
  THIRD_PARTY_NAME
}

type ContactTypeConnection {
  edges: [Contact]
  pageInfo: PageInfo
}

type Dashboard {
  id: String!
  name: String
  reportId: String!
  datasetId: String!
  dashboardVisibility: DashboardVisibilityType!
  dashboardType: String!
}

input DashboardDashboardVisibilityTypeEnumFilter {
  field: DashboardVisibilityFilterField!
  operator: NumberFilterOperator!
  filterValue1: DashboardVisibilityType!
  filterValue2: DashboardVisibilityType
}

input DashboardQueryParams {
  sortField: DashboardSortField
  sortDirection: SortDirection
  stringFilters: [DashboardStringFilter]
  dashboardVisibilityFilters: [DashboardDashboardVisibilityTypeEnumFilter]
}

type DashboardRight {
  id: String!
  userId: String!
  dashboardType: String!
}

input DashboardRightInput {
  userId: String!
  dashboardType: String!
}

input DashboardRightQueryParams {
  sortField: DashboardRightSortField
  sortDirection: SortDirection
  stringFilters: [DashboardRightStringFilter]
}

enum DashboardRightSortField {
  ID
  USER_ID
}

input DashboardRightStringFilter {
  field: DashboardRightStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DashboardRightStringFilterField {
  USER_ID
}

type DashboardRightTypeConnection {
  edges: [DashboardRight]
  pageInfo: PageInfo
}

enum DashboardSortField {
  NAME
}

input DashboardStringFilter {
  field: DashboardStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DashboardStringFilterField {
  NAME
  DASHBOARD_TYPE
}

type DashboardTypeConnection {
  edges: [Dashboard]
  pageInfo: PageInfo
}

enum DashboardVisibilityFilterField {
  DASHBOARD_VISIBILITY
}

enum DashboardVisibilityType {
  INTERNAL
  PUBLIC_CUSTOM
  PUBLIC_STANDARD
}

input DataFileActionInput {
  trackingId: String
  data: String!
  fileName: String!
  format: String!
  action: String!
  parameters: String
}

"""
The `DateTime` scalar type represents a date and time. `DateTime` expects
timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTime

type Document {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  fileName: String!
  documentTypeCode: String!
  documentSubTypeCode: String
  status: DocumentStatus!
  subStatus: DocumentSubStatus
  jobIds: [String]
  metadata: [GedField]
  fileContent: String
  archiveId: String
  archiveDate: DateTime
  archiver: ArchiverProvider
  signRequired: Boolean!
  hash: String!
  readDate: DateTime
  signedDate: DateTime
  sentDate: DateTime
  signType: DocumentTypeSignType
  attachmentIds: [String]
  jobMessageStatusCounts: [JobMessageStatusCount]
  primaryJobMessageId: String
  previewBlobStorageFilePath: String
  standardFileData: [KeyValue]
}

input DocumentActionOptions {
  action: DocumentActionType!
  metadata: [GedFieldInput]
  comment: String
  attachments: [AttachmentInput]
}

enum DocumentActionType {
  CANCEL_DOCUMENT_LINK
  RESEND
  EDIT_METADATA
  CANCEL
  COMPLETE
}

enum DocumentArrayElementFilterField {
  METADATA
}

enum DocumentBooleanFilterField {
  IS_READ
  IS_SIGNED
  IS_SENT
}

input DocumentBoolFilter {
  field: DocumentBooleanFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

type DocumentCount {
  totalCount: Long!
  documentTypeCounts: [DocumentTypeCounts]
  statusCounts: [StatusCounts]
  subStatusCounts: [SubStatusCounts]
  serviceCounts: [DocumentTypeCounts]
}

type DocumentCountStatistics {
  year: Int
  month: Int
  documentTypeCode: String!
  count: Long!
}

enum DocumentCountStatisticsCycleFilterField {
  CYCLE
}

input DocumentCountStatisticsDateFilter {
  field: DocumentCountStatisticsDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum DocumentCountStatisticsDateFilterField {
  FIRST_JOB_DATE
}

input DocumentCountStatisticsNatureCycleEnumFilter {
  field: DocumentCountStatisticsCycleFilterField!
  operator: NumberFilterOperator!
  filterValue1: NatureCycle!
  filterValue2: NatureCycle
}

input DocumentCountStatisticsQueryParams {
  dateFilters: [DocumentCountStatisticsDateFilter]
  cycleFilters: [DocumentCountStatisticsNatureCycleEnumFilter]
}

input DocumentDateFilter {
  field: DocumentDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum DocumentDateFilterField {
  CREATION_DATE
  READ_DATE
  SIGN_DATE
  SENT_DATE
}

input DocumentDocumentArrayElementFilterFieldArrayElementFilter {
  field: DocumentArrayElementFilterField!
  filterArrayElementName: String!
  operator: ArrayElementFilterOperator!
  filterStringValue1: String
  filterStringValue2: String
  filterIntValue1: Int
  filterIntValue2: Int
  filterDoubleValue1: Float
  filterDoubleValue2: Float
  filterBoolValue1: Boolean
  filterBoolValue2: Boolean
  filterDateValue1: DateTime
  filterDateValue2: DateTime
}

input DocumentDocumentStatusEnumFilter {
  field: DocumentStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: DocumentStatus!
  filterValue2: DocumentStatus
}

input DocumentDocumentTypeSignTypeEnumFilter {
  field: DocumentSignTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: DocumentTypeSignType!
  filterValue2: DocumentTypeSignType
}

input DocumentIdOrNewInput {
  existingDocumentId: String
  newDocument: DocumentInput
}

type DocumentInfo {
  id: String!
  hash: String!
}

input DocumentInput {
  documentTypeCode: String!
  documentSubTypeCode: String
  fileName: String!
  gedFields: [GedFieldInput]
  gedXml: String
  tempFileId: String
  base64: String
  hash: String
}

type DocumentJob {
  id: String!
  tenantId: String!
  trackingId: String!
  completedDate: DateTime
  status: JobBaseStatus!
  documentIds: [String]
  serviceId: String
  note: String
  creationDate: DateTime
  jobType: JobBaseType
  validationType: DocumentJobValidationType!
  attachmentIds: [String]
  recipientCount: Int!
  sentCount: Int!
  failedCount: Int!
  readCount: Int!
}

input DocumentJobDateFilter {
  field: JobDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

input DocumentJobInput {
  trackingId: String
  serviceId: String
  note: String
  validationType: DocumentJobValidationType!
  document: DocumentIdOrNewInput!
  attachments: [AttachmentInput]
  contactRecipients: [ContactRecipientInput]
  thirdPartyRecipients: [ThirdPartyRecipientInput]
  adhocRecipientsFiles: [FileIdOrBase64Input]
  postalParameter: PostalParameterInput
  postalAdhocRecipients: [PostalAdhocRecipientInput]
  emailAdhocRecipients: [EmailAdhocRecipientInput]
  chorusB2GAdhocRecipient: ChorusB2GAdhocRecipientInput
}

input DocumentJobJobBaseStatusEnumFilter {
  field: JobStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobBaseStatus!
  filterValue2: JobBaseStatus
}

input DocumentJobQueryParams {
  sortField: JobSortField
  sortDirection: SortDirection
  stringFilters: [DocumentJobStringFilter]
  dateFilters: [DocumentJobDateFilter]
  statusFilters: [DocumentJobJobBaseStatusEnumFilter]
  jobTypeFilters: [JobBaseJobBaseTypeEnumFilter]
}

input DocumentJobStringFilter {
  field: JobStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

type DocumentJobTypeConnection {
  edges: [DocumentJob]
  pageInfo: PageInfo
}

enum DocumentJobValidationType {
  NONE
  WITH_VALIDATION
  FOR_NEW_THIRDPARTY
}

type DocumentProbativeJob {
  id: String!
  tenantId: String!
  trackingId: String!
  completedDate: DateTime
  status: JobBaseStatus!
  documentsId: [String]
  serviceId: String
  note: String
  creationDate: DateTime
  jobType: JobBaseType
  validationType: DocumentJobValidationType!
  joinedMessage: String!
  subject: String!
  registeredPostalOptions: RegisteredPostalOptions
  attachmentsId: [String]
  recipientCount: Int!
  sentCount: Int!
  failedCount: Int!
}

input DocumentProbativeJobDateFilter {
  field: JobDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

input DocumentProbativeJobInput {
  probativeType: DocumentProbativeJobType!
  trackingId: String
  serviceId: String
  note: String
  validationType: DocumentJobValidationType!
  document: DocumentIdOrNewInput!
  attachments: [AttachmentInput]
  registeredPostalOptions: RegisteredPostalOptionsInput
  joinedMessage: String
  subject: String
  contactRecipients: [ContactRecipientInput]
  thirdPartyRecipients: [ThirdPartyRecipientInput]
  adhocRecipientsFiles: [FileIdOrBase64Input]
  emailAdhocRecipients: [EmailAdhocRecipientInput]
}

input DocumentProbativeJobJobBaseStatusEnumFilter {
  field: JobStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobBaseStatus!
  filterValue2: JobBaseStatus
}

input DocumentProbativeJobQueryParams {
  sortField: JobSortField
  sortDirection: SortDirection
  stringFilters: [DocumentProbativeJobStringFilter]
  dateFilters: [DocumentProbativeJobDateFilter]
  statusFilters: [DocumentProbativeJobJobBaseStatusEnumFilter]
  jobTypeFilters: [JobBaseJobBaseTypeEnumFilter]
}

input DocumentProbativeJobStringFilter {
  field: JobStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DocumentProbativeJobType {
  SIMPLE
  CERTIFIED
  REGISTERED
  EIDAS_REGISTERED
}

type DocumentProbativeJobTypeConnection {
  edges: [DocumentProbativeJob]
  pageInfo: PageInfo
}

input DocumentQueryParams {
  sortField: DocumentSortField
  sortArrayElementName: String
  sortDirection: SortDirection
  stringFilters: [DocumentStringFilter]
  dateFilters: [DocumentDateFilter]
  boolFilters: [DocumentBoolFilter]
  statusFilters: [DocumentDocumentStatusEnumFilter]
  arrayElementFilters: [DocumentDocumentArrayElementFilterFieldArrayElementFilter]
  signTypeFilters: [DocumentDocumentTypeSignTypeEnumFilter]
}

enum DocumentSignTypeFilterField {
  SIGN_TYPE
}

type DocumentSizeStatistics {
  size: Long!
}

input DocumentSizeStatisticsDateFilter {
  field: DocumentSizeStatisticsDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum DocumentSizeStatisticsDateFilterField {
  FIRST_JOB_DATE
}

input DocumentSizeStatisticsQueryParams {
  dateFilters: [DocumentSizeStatisticsDateFilter]
}

enum DocumentSortField {
  ID
  FILE_NAME
  METADATA
  CREATION_DATE
  READ_DATE
  SIGN_DATE
  SENT_DATE
  SIGN_TYPE
}

enum DocumentStatus {
  DRAFT
  PROCESSING
  COMPLETED
  ERROR
  CANCELED
}

enum DocumentStatusFilterField {
  STATUS
}

input DocumentStringFilter {
  field: DocumentStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DocumentStringFilterField {
  TENANT_ID
  DOCUMENT_TYPE_CODE
  FILE_NAME
  DOCUMENT_SUB_TYPE_CODE
}

enum DocumentSubStatus {
  SUBMITED
  SENT_BY_PLATFORM
  RECEIVED_BY_PLATFORM
  MADE_AVAILABLE
  IN_HAND
  APPROVED
  PARTIALLY_APPROVED
  COMPLETED
  PAYMENT_SENT
  PAYMENT_RECEIVED
  DISPUTE
  SUSPENDED
  REFUSED
  REJECTED
  ERROR
  DRAFT
  CANCELED
  ANTIVIRUS_SCAN_FAILED
  VIRUS_DETECTED
  STANDARD_FILE_INVALID
  STANDARD_DATA_EXTRACTION_FAILED
  METADATA_GENERATION_FAILED
  INVOICE_GENERATION_FAILED
}

type DocumentSubType {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  code: String!
  name: String!
  chorusAttachmentTypeId: String!
  chorusAttachmentTypeCode: String!
  natureCodes: [String]
}

input DocumentSubTypeQueryParams {
  sortField: DocumentSubTypeSortField
  sortDirection: SortDirection
  stringFilters: [DocumentSubTypeStringFilter]
}

enum DocumentSubTypeSortField {
  CODE
  NAME
  CHORUS_ATTACHMENT_TYPE_ID
  CHORUS_ATTACHMENT_TYPE_CODE
  CREATION_DATE
}

input DocumentSubTypeStringFilter {
  field: DocumentSubTypeStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DocumentSubTypeStringFilterField {
  CODE
  NAME
  NATURE_CODES
  CHORUS_ATTACHMENT_TYPE_ID
  CHORUS_ATTACHMENT_TYPE_CODE
}

type DocumentSubTypeTypeConnection {
  edges: [DocumentSubType]
  pageInfo: PageInfo
}

enum DocumentTransmissionMode {
  NONE
  EMAIL_WITH_ATTACHMENT
  EMAIL_WITH_LINK
}

type DocumentType {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  code: String!
  name: String!
  natureCode: String!
  metadataConfigs: [MetadataConfig]
  sign: DocumentTypeSignType
  archiveConfiguration: ArchiveConfiguration
}

type DocumentTypeConnection {
  edges: [Document]
  pageInfo: PageInfo
}

type DocumentTypeCounts {
  key: String!
  value: Long!
}

input DocumentTypeInput {
  id: String
  code: String!
  name: String!
  natureCode: String
  sign: DocumentTypeSignType
  archiveConfiguration: ArchiveConfigurationInput
}

input DocumentTypeQueryParams {
  sortField: DocumentTypeSortField
  sortDirection: SortDirection
  stringFilters: [DocumentTypeStringFilter]
}

enum DocumentTypeSignType {
  NONE
  QUALIFIED_EIDAS_CERTIFICATE
}

enum DocumentTypeSortField {
  CODE
  NAME
  NATURE_CODE
  CREATION_DATE
}

input DocumentTypeStringFilter {
  field: DocumentTypeStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DocumentTypeStringFilterField {
  CODE
  NAME
  NATURE_CODE
}

type DocumentTypeTypeConnection {
  edges: [DocumentType]
  pageInfo: PageInfo
}

"""The application rights for domain user."""
enum DomainRightType {
  """Get or list domains"""
  READ_DOMAIN

  """Create or edit domains"""
  CHANGE_DOMAIN

  """Get or list tenants"""
  READ_TENANT

  """Create tenants"""
  ADD_TENANT

  """Edit tenants"""
  EDIT_TENANT

  """Grant user rights"""
  GRANT_RIGHT

  """Grant internal user rights"""
  GRANT_INTERNAL_RIGHT

  """Create or edit tenant users"""
  CHANGE_TENANT_USER

  """Create or edit domain administrators"""
  CHANGE_DOMAIN_USER

  """Get or list Api users"""
  READ_TENANT_API_USER

  """Create, edit or renew Api users"""
  CHANGE_TENANT_API_USER

  """Get or list document types"""
  READ_DOCUMENT_TYPE

  """Create, edit or delete document types"""
  CHANGE_DOCUMENT_TYPE

  """Get or list tenants with internal info"""
  READ_TENANT_EDC_OMS_INFO

  """Create or edit tenant internal info"""
  CHANGE_TENANT_EDC_OMS_INFO

  """Get or list products"""
  READ_PRODUCT

  """Create or edit products"""
  CHANGE_PRODUCT

  """Get or list product installs"""
  READ_PRODUCT_INSTALL

  """Create or edit product installs"""
  CHANGE_PRODUCT_INSTALL

  """Get or list configurations"""
  READ_CONFIGURATION

  """Create or edit configurations"""
  CHANGE_CONFIGURATION

  """Get or list OMS resources"""
  READ_OMS_RESOURCES

  """Create or edit OMS resources"""
  CHANGE_OMS_RESOURCES

  """Synchronize EDC resources"""
  SYNCHRONIZE_EDC_RESOURCES

  """Create or edit PowerBi auth token"""
  CHANGE_POWER_BI_AUTH_TOKEN

  """Validate invited user"""
  VALIDATE_USER

  """Get or list metadatas"""
  READ_METADATA

  """Create, edit or delete metadatas"""
  CHANGE_METADATA

  """Get or list dashboards"""
  READ_DASHBOARD

  """Create, edit or delete dashboards"""
  CHANGE_DASHBOARD

  """Get or list template structures"""
  READ_TEMPLATE_STRUCTURE

  """Create, edit or delete template structures"""
  CHANGE_TEMPLATE_STRUCTURE

  """Get or list template contents"""
  READ_TEMPLATE_CONTENT

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_CONTENT

  """Get or list Domain Api users"""
  READ_DOMAIN_API_USER

  """Create, edit or renew Domain Api users"""
  CHANGE_DOMAIN_API_USER

  """Get or list template variables configuration"""
  READ_TEMPLATE_VARIABLE_CONFIGURATION

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_VARIABLE_CONFIGURATION

  """CancelJobMessage"""
  CANCEL_JOB_MESSAGE

  """Get or list postal parameter configurations"""
  READ_POSTAL_PARAMETER_CONFIGURATION

  """Create, edit or delete postal parameter configurations"""
  CHANGE_POSTAL_PARAMETER_CONFIGURATION

  """Get or list status actions"""
  READ_STATUS_ACTION

  """Get or list callback configurations"""
  READ_CALLBACK_CONFIGURATION

  """Create, edit or delete callback configurations"""
  CHANGE_CALLBACK_CONFIGURATION

  """Edit Tenant postal config"""
  EDIT_TENANT_POSTAL_CONFIG
}

type DomainRightValue {
  right: DomainRightType
  value: Boolean!
}

input DomainRightValueInput {
  right: DomainRightType
  value: Boolean!
}

type DomainRightValueTypeConnection {
  edges: [DomainRightValue]
  pageInfo: PageInfo
}

type DomainUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  civility: String!
  firstName: String!
  lastName: String!
  email: String!
  userId: String!
  phone: String!
  culture: String!
  timeZone: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
  domainId: String!
  domainName: String!
}

input DomainUserBoolFilter {
  field: DomainUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum DomainUserBoolFilterField {
  IS_ENABLED
}

input DomainUserInput {
  id: String
  civility: String
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  culture: String
  timeZone: String
  isEnabled: Boolean
  domainId: String!
}

input DomainUserQueryParams {
  sortField: DomainUserSortField
  sortDirection: SortDirection
  stringFilters: [DomainUserStringFilter]
  boolFilters: [DomainUserBoolFilter]
}

enum DomainUserSortField {
  CIVILITY
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  PHONE
  CULTURE
  TIME_ZONE
  IS_ENABLED
  DOMAIN_ID
  DOMAIN_NAME
}

input DomainUserStringFilter {
  field: DomainUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum DomainUserStringFilterField {
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  DOMAIN_ID
  DOMAIN_NAME
}

type DomainUserTypeConnection {
  edges: [DomainUser]
  pageInfo: PageInfo
}

input EmailAdhocRecipientInput {
  name: String!
  documentTransmissionMode: DocumentTransmissionMode!
  email: String!
  isPrimary: Boolean
  language: String
}

input EmailJob {
  jobType: String
  trackingId: String
  scheduledStartTime: DateTime
  adhocRecipientFiles: [FileIdOrNewInputType]
  deDuplicate: Boolean
  emailAdhocRecipients: [EmailJobRecipient]
  emailBody: FileIdOrNewInputType
  emailAltBody: FileIdOrNewInputType
  attachments: [FileIdOrNewInputType]
  parameter: EmailParameter
}

input EmailJobRecipient {
  email: String!
  name: String
  optionalFields: [String]
}

input EmailParameter {
  subject: String
  from: String
  replyTo: String
  envelopeSender: String
  activateAutoPull: Boolean
  activateEmbeddedImageInHTML: Boolean
  activateTracking: Boolean
  trackingType: EmailTrackingType
  preHeader: String
  priorityFlag: EmailPriorityFlagType
}

enum EmailPriorityFlagType {
  STANDARD
  HIGH
  LOW
}

enum EmailTrackingType {
  ALL
  OPEN_ONLY
  CLICK_ONLY
}

enum EngineEventAction {
  SIGN_DOCUMENT
  ARCHIVE_DOCUMENT
  READ_DOCUMENT
  CANCEL_DOCUMENT
  CREATE_JOB
  PROCESS_JOB
  LAUNCH_JOB
  SEND_NOTIFICATION
  READ_ERE_NOTIFICATION
  ACCEPT_ERE
  REFUSE_ERE
  NOT_READ_ERE
  RELAUNCH_ERE
  GENERATE_PROOF
  SEND_POSTAL
  UNDELIVERED_POSTAL
  SEND_CHORUS_B_2_G
  CHANGE_STATUS_CHORUS_B_2_G
  COMPLETE_CHORUS_B_2_G
  EDIT_METADATA_DOCUMENT
  ADD_ATTACHMENTS_DOCUMENT
  CANCEL_JOB_MESSAGE
  PRE_PROCESS_JOB
  ANTIVIRUS_SCAN_DOCUMENT
  UPDATE_DATABASE
  COMPLETE_JOB
  RELAUNCH_JOB_MESSAGE
}

enum EnvelopeType {
  C_4
  C_5
  DL_2
}

"""The application rights for environment user."""
enum EnvironmentRightType {
  """Create or edit environment administrators"""
  CHANGE_ENVIRONMENT_USER

  """Get or list third party types"""
  READ_THIRD_PARTY_TYPE

  """Create, edit or delete third party types"""
  CHANGE_THIRD_PARTY_TYPE

  """Get or list contact functions"""
  READ_CONTACT_FUNCTION

  """Create, edit or delete contact functions"""
  CHANGE_CONTACT_FUNCTION

  """Get or list Environment Api users"""
  READ_ENVIRONMENT_API_USER

  """Create, edit or renew Environment Api users"""
  CHANGE_ENVIRONMENT_API_USER

  """Get or list status actions"""
  READ_STATUS_ACTION

  """Get or list api routing configurations"""
  READ_ROUTING_CONFIGURATION

  """Create, edit or delete api routing configurations"""
  CHANGE_ROUTING_CONFIGURATION

  """Edit Tenant postal config"""
  EDIT_TENANT_POSTAL_CONFIG
}

type EnvironmentRightValue {
  right: EnvironmentRightType
  value: Boolean!
}

input EnvironmentRightValueInput {
  right: EnvironmentRightType
  value: Boolean!
}

type EnvironmentRightValueTypeConnection {
  edges: [EnvironmentRightValue]
  pageInfo: PageInfo
}

type EnvironmentUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  civility: String!
  firstName: String!
  lastName: String!
  email: String!
  userId: String!
  phone: String!
  culture: String!
  timeZone: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
}

input EnvironmentUserBoolFilter {
  field: EnvironmentUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum EnvironmentUserBoolFilterField {
  IS_ENABLED
}

input EnvironmentUserInput {
  id: String
  civility: String
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  culture: String
  timeZone: String
  isEnabled: Boolean
}

input EnvironmentUserQueryParams {
  sortField: EnvironmentUserSortField
  sortDirection: SortDirection
  stringFilters: [EnvironmentUserStringFilter]
  boolFilters: [EnvironmentUserBoolFilter]
}

enum EnvironmentUserSortField {
  CIVILITY
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  PHONE
  CULTURE
  TIME_ZONE
  IS_ENABLED
}

input EnvironmentUserStringFilter {
  field: EnvironmentUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum EnvironmentUserStringFilterField {
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
}

type EnvironmentUserTypeConnection {
  edges: [EnvironmentUser]
  pageInfo: PageInfo
}

type ErrorQueueMessage {
  id: String!
  tenantId: String!
  tenantName: String!
  jobId: String!
  resourceId: String
  resourceType: ErrorQueueMessageResourceType
  status: ErrorQueueMessageStatus!
  action: EngineEventAction!
  errorCode: Int!
  errorMessage: String!
  errorStackTrace: String!
  errorFunctionName: String
  errorServiceName: String
}

enum ErrorQueueMessageActionFilterField {
  ACTION
}

input ErrorQueueMessageEngineEventActionEnumFilter {
  field: ErrorQueueMessageActionFilterField!
  operator: NumberFilterOperator!
  filterValue1: EngineEventAction!
  filterValue2: EngineEventAction
}

input ErrorQueueMessageErrorQueueMessageResourceTypeEnumFilter {
  field: ErrorQueueMessageResourceTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: ErrorQueueMessageResourceType!
  filterValue2: ErrorQueueMessageResourceType
}

input ErrorQueueMessageErrorQueueMessageStatusEnumFilter {
  field: ErrorQueueMessageStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: ErrorQueueMessageStatus!
  filterValue2: ErrorQueueMessageStatus
}

input ErrorQueueMessageInput {
  id: String!
  tenantId: String!
  tenantName: String!
  jobId: String!
  resourceId: String!
  resourceType: ErrorQueueMessageResourceType!
  status: ErrorQueueMessageStatus!
  action: EngineEventAction!
  errorCode: Int!
  errorMessage: String!
  errorStackTrace: String!
  errorFunctionName: String!
  errorServiceName: String!
}

input ErrorQueueMessageIntFilter {
  field: ErrorQueueMessageIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum ErrorQueueMessageIntFilterField {
  ERROR_CODE
}

input ErrorQueueMessageQueryParams {
  sortField: ErrorQueueMessageSortField
  sortDirection: SortDirection
  stringFilters: [ErrorQueueMessageStringFilter]
  intFilters: [ErrorQueueMessageIntFilter]
  resourceTypeFilters: [ErrorQueueMessageErrorQueueMessageResourceTypeEnumFilter]
  statusFilters: [ErrorQueueMessageErrorQueueMessageStatusEnumFilter]
  actionFilters: [ErrorQueueMessageEngineEventActionEnumFilter]
}

enum ErrorQueueMessageResourceType {
  JOB_MESSAGE
  JOB
  DOCUMENT
  ARCHIVE_BATCH
  NONE
}

enum ErrorQueueMessageResourceTypeFilterField {
  RESOURCE_TYPE
}

enum ErrorQueueMessageSortField {
  TENANT_ID
  TENANT_NAME
  JOB_ID
  RESOURCE_ID
  RESOURCE_TYPE
  STATUS
  ACTION
  ERROR_CODE
  ERROR_MESSAGE
  ERROR_FUNCTION_NAME
  ERROR_STACK_TRACE
  ERROR_SERVICE_NAME
}

enum ErrorQueueMessageStatus {
  TO_PROCESS
  IN_PROGRESS
  COMPLETED
}

enum ErrorQueueMessageStatusFilterField {
  STATUS
}

input ErrorQueueMessageStringFilter {
  field: ErrorQueueMessageStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ErrorQueueMessageStringFilterField {
  TENANT_ID
  TENANT_NAME
  JOB_ID
  RESOURCE_ID
  ERROR_MESSAGE
  ERROR_FUNCTION_NAME
  ERROR_STACK_TRACE
  ERROR_SERVICE_NAME
}

type ErrorQueueMessageTypeConnection {
  edges: [ErrorQueueMessage]
  pageInfo: PageInfo
}

input FaxJob {
  jobType: String
  trackingId: String
  scheduledStartTime: DateTime
  adhocRecipientFiles: [FileIdOrNewInputType]
  deDuplicate: Boolean
  adhocRecipients: [Recipient]
  documents: [FileIdOrNewInputType]
  parameter: FaxParameter
}

enum FaxMode {
  STANDARD
  FINE
}

input FaxParameter {
  resolution: FaxMode
  coverSheetMemo: String
  csid: String
  shouldFaxEmailBody: Boolean
  shouldSuppressFaxConversion: Boolean
  useBadNumberDns: Boolean
}

type FileContent {
  creationDateTime: DateTime!
  lastModificationDateTime: DateTime!
  name: String!
  size: Long!
  content: String!
}

input FileContentInput {
  name: String!
  content: String!
}

type FileHeader {
  creationDateTime: DateTime!
  lastModificationDateTime: DateTime!
  name: String!
  size: Long!
}

type FileHeaderTypeConnection {
  edges: [FileHeader]
  pageInfo: PageInfo
}

input FileIdOrBase64Input {
  tempFileId: String
  base64: String
}

input FileIdOrNewInputType {
  existingFileId: String
  newFile: FileInputType
}

input FileInputType {
  fileName: String!
  tempFileId: String
  base64: String
}

input FileReferenceBase {
  name: String!
  hosted: Boolean
  content: String
}

type GedField {
  key: String!
  value: String!
  dataType: GedFieldDataType!
}

enum GedFieldDataType {
  STRING
  INTEGER
  DOUBLE
  DATE
  BOOL
}

input GedFieldInput {
  key: String!
  value: String
  dataType: GedFieldDataType
}

type IdName {
  id: String!
  name: String
}

input IdNameInput {
  id: String!
}

type IdNameType {
  id: String
  name: String
  type: ActivityActorType
}

type InboundFax {
  customerNumber: Int!
  messageId: String
  receivedDate: DateTime!
  to: String
  from: String
  folder: String
  fileName: String
  isDeleted: Boolean!
  callTime: Int!
  pages: Int!
  baudRate: Int!
}

input InboundFaxDateFilter {
  field: InboundFaxDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum InboundFaxDateFilterField {
  RECEIVED_DATE
}

input InboundFaxQueryParams {
  sortField: InboundFaxSortField
  sortDirection: SortDirection
  stringFilters: [InboundFaxStringFilter]
  dateFilters: [InboundFaxDateFilter]
}

enum InboundFaxSortField {
  RECEIVED_DATE
  MESSAGE_ID
  FROM
  TO
  FOLDER
  FILE_NAME
  CALL_TIME
  PAGES
  BAUD_RATE
  CUSTOMER_NUMBER
}

input InboundFaxStringFilter {
  field: InboundFaxStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum InboundFaxStringFilterField {
  FROM
  TO
  LOGIN
}

type InboundFaxTypeConnection {
  edges: [InboundFax]
  pageInfo: PageInfo
}

type InboundSms {
  customerNumber: Int!
  jobNumber: Int!
  jobItemNumber: Int!
  receivedDate: DateTime!
  toAddress: String
  fromAddress: String
  recipient: String
  message: String
}

input InboundSmsDateFilter {
  field: InboundSmsDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum InboundSmsDateFilterField {
  RECEIVED_DATE
}

input InboundSmsIntFilter {
  field: InboundSmsIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum InboundSmsIntFilterField {
  JOB_NUMBER
}

input InboundSmsQueryParams {
  sortField: InboundSmsSortField
  sortDirection: SortDirection
  stringFilters: [InboundSmsStringFilter]
  dateFilters: [InboundSmsDateFilter]
  intFilters: [InboundSmsIntFilter]
}

enum InboundSmsSortField {
  JOB_NUMBER
  JOB_ITEM
  RECEIVED_DATE
  FROM_ADDRESS
  TO_ADDRESS
  CUSTOMER_NUMBER
}

input InboundSmsStringFilter {
  field: InboundSmsStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum InboundSmsStringFilterField {
  FROM_ADDRESS
  TO_ADDRESS
}

type InboundSmsTypeConnection {
  edges: [InboundSms]
  pageInfo: PageInfo
}

type IncomingEmailHistory {
  creationDate: DateTime
  lastModificationDate: DateTime
  id: String!
  tenantId: String!
  routingConfigurationId: String!
  type: ProcessingType!
  status: ProcessingStatus!
  errorString: String!
  from: String!
  to: String!
  subject: String!
  attachmentNames: [String]
  headerValues: [KeyValuePair]
  incomingEmailPath: String!
}

input IncomingEmailHistoryDateFilter {
  field: IncomingEmailHistoryDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum IncomingEmailHistoryDateFilterField {
  CREATION_DATE
}

input IncomingEmailHistoryInput {
  id: String
  tenantId: String!
  routingConfigurationId: String!
  type: ProcessingType!
  status: ProcessingStatus!
  errorString: String
  from: String!
  to: String!
  subject: String!
  attachmentNames: [String]
  headerValues: [KeyValuePairInput]
  incomingEmailPath: String!
}

input IncomingEmailHistoryProcessingStatusEnumFilter {
  field: IncomingEmailHistoryStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: ProcessingStatus!
  filterValue2: ProcessingStatus
}

input IncomingEmailHistoryProcessingTypeEnumFilter {
  field: IncomingEmailHistoryTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: ProcessingType!
  filterValue2: ProcessingType
}

input IncomingEmailHistoryQueryParams {
  sortField: IncomingEmailHistorySortField
  sortDirection: SortDirection
  stringFilters: [IncomingEmailHistoryStringFilter]
  dateFilters: [IncomingEmailHistoryDateFilter]
  statusFilters: [IncomingEmailHistoryProcessingStatusEnumFilter]
  typeFilters: [IncomingEmailHistoryProcessingTypeEnumFilter]
}

enum IncomingEmailHistorySortField {
  ID
  TENANT_ID
  TYPE
  STATUS
  FROM
  TO
  SUBJECT
  INCOMING_EMAIL_PATH
  CREATION_DATE
}

enum IncomingEmailHistoryStatusFilterField {
  STATUS
}

input IncomingEmailHistoryStringFilter {
  field: IncomingEmailHistoryStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum IncomingEmailHistoryStringFilterField {
  ID
  TENANT_ID
  ROUTING_CONFIGURATION_ID
  FROM
  TO
  SUBJECT
  INCOMING_EMAIL_PATH
}

type IncomingEmailHistoryTypeConnection {
  edges: [IncomingEmailHistory]
  pageInfo: PageInfo
}

enum IncomingEmailHistoryTypeFilterField {
  TYPE
}

enum InheritedConfigurationOwnerType {
  SYSTEM
  DOMAIN
  TENANT
  SERVICE
  NATURE
  DOCUMENT_TYPE
}

type Job {
  id: String!
  tenantId: String!
  trackingId: String!
  completedDate: DateTime
  status: JobBaseStatus!
  documentIds: [String]
  serviceId: String
  note: String
  creationDate: DateTime
  jobType: JobBaseType
  recipientCount: Int!
  sentCount: Int!
  failedCount: Int!
}

input JobActionOptions {
  action: JobActionType!
}

enum JobActionType {
  NONE
}

input JobBaseDateFilter {
  field: JobDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

input JobBaseJobBaseStatusEnumFilter {
  field: JobStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobBaseStatus!
  filterValue2: JobBaseStatus
}

input JobBaseJobBaseTypeEnumFilter {
  field: JobTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobBaseType!
  filterValue2: JobBaseType
}

enum JobBaseStatus {
  CREATED
  PROCESSING
  COMPLETED
  ERROR
  CANCELED
}

input JobBaseStringFilter {
  field: JobStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum JobBaseType {
  NONE
  DOCUMENT
  DOCUMENT_PROBATIVE
  POSTAL
  EMAIL
  SMS
  VOICE
  FAX
  PUSH
  DATA_FILE
}

type JobCountStatistics {
  count: Int!
}

type JobCreationResult {
  id: String!
  tenantId: String!
  trackingId: String!
  documents: [DocumentInfo]
  attachments: [DocumentInfo]
}

enum JobDateFilterField {
  CREATION_DATE
  COMPLETED_DATE
}

type JobItem {
  address: String
  answerBack: String
  attempts: Int!
  baudRate: Int!
  bytes: Int!
  callAnalysis: String
  callTime: Int!
  connectionDuration: Float!
  faxResolution: FaxMode!
  finishDate: DateTime!
  firstDate: DateTime!
  isSent: Boolean!
  jobItemNumber: Int!
  jobNumber: Int!
  lastCall: Float!
  lastConnectionDuration: Float!
  media: Media!
  outcome: String
  outcomes: String
  pages: Int!
  priority: Byte!
  recipient: String
  sentPages: Int!
  status: Int
  statusText: String
  trackingId: String
  uD1: String
  uD2: String
  uD3: String
  uD4: String
  uD5: String
}

input JobItemBoolFilter {
  field: JobItemBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum JobItemBoolFilterField {
  FAILED
}

input JobItemDateFilter {
  field: JobItemDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum JobItemDateFilterField {
  FINISH_DATE
}

input JobItemId {
  jobNumber: Int!
  jobItemNumber: Int!
}

input JobItemIntFilter {
  field: JobItemIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum JobItemIntFilterField {
  JOB_NUMBER
}

input JobItemQueryParams {
  sortField: JobItemSortField
  sortDirection: SortDirection
  stringFilters: [JobItemStringFilter]
  dateFilters: [JobItemDateFilter]
  intFilters: [JobItemIntFilter]
  boolFilters: [JobItemBoolFilter]
}

enum JobItemSortField {
  JOB_NUMBER
  JOB_ITEM
  TRACKING_ID
  ADDRESS
  RECIPIENT
  PAGES
  SENT_PAGES
  ATTEMPTS
  FIRST_DATE
  FINISH_DATE
  BYTES
  ANSWER_BACK
  BAUD_RATE
  OUTCOME
  OUTCOMES
  STATUS
  CALL_TIME
}

input JobItemStringFilter {
  field: JobItemStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum JobItemStringFilterField {
  TRACKING_ID
  OUTCOME
  ADDRESS
}

type JobItemTypeConnection {
  edges: [JobItem]
  pageInfo: PageInfo
}

type JobMessage {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  messageType: JobMessageType!
  tenantId: String!
  trackingId: String!
  jobId: String!
  documentIds: [String] @deprecated(reason: "This property has been deprecated. Use Documents instead.")
  thirdPartyId: String
  contactId: String
  name: String
  recipientName: String!
  status: JobMessageStatus!
  transmissionStatus: JobMessageTransmissionStatus!
  documents: [JobMessageDocument]
  retryCount: Int!
  readDocumentDate: DateTime
  isPrimary: Boolean
  emailAddress: String
  postalAddress: PostalAddress
  recordedDeliveryNumber: String
  transmissionMode: DocumentTransmissionMode
  chorusStatus: JobMessageChorusStatus
  validationErrors: [ChorusB2GValidationError]
  chorusB2GAddress: ChorusB2GAddress
  chorusActionType: JobMessageChorusActionType
  chorusAddedAttachmentIds: [String]
}

input JobMessageActionOptions {
  action: JobMessageActionType!
}

enum JobMessageActionType {
  CANCEL
}

input JobMessageBaseDateFilter {
  field: JobMessageDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

input JobMessageBaseJobMessageStatusEnumFilter {
  field: JobMessageStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobMessageStatus!
  filterValue2: JobMessageStatus
}

input JobMessageBaseJobMessageTransmissionStatusEnumFilter {
  field: JobMessageTransmissionStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobMessageTransmissionStatus!
  filterValue2: JobMessageTransmissionStatus
}

input JobMessageBaseStringFilter {
  field: JobMessageStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum JobMessageChorusActionType {
  SEND
  COMPLETE
}

enum JobMessageChorusStatus {
  UNKNOWN
  DRAFT
  MADE_AVAILABLE_TO_THE_FIRST_VALIDATOR
  WRONG_VALIDATOR_BY_SUPPLIER
  REJECTED_BY_FIRST_VALIDATOR
  VALIDATED_BY_FIRST_VALIDATOR
  VALIDATION_1_OVER_THE_DEADLINE
  MADE_AVAILABLE_TO_THE_SECOND_VALIDATOR
  WRONG_VALIDATOR_BY_COCONTRACTOR
  REJECTED_BY_SECOND_VALIDATOR
  VALIDATED_BY_SECOND_VALIDATOR
  VALIDATION_2_OVER_THE_DEADLINE
  SUBMITED
  TRANSMISSION_IN_PROGRESS
  MADE_AVAILABLE_TO_THE_RECIPIENT
  WRONG_RECEIVER_INFORMATIONS
  SUSPENDED
  COMPLETED
  REJECTED
  MANDATED
  RELEASED_FOR_PAYMENT
  POSTED_IN_THE_ACCOUNTS
  MADE_AVAILABLE_TO_THE_ACCOUNTING_OFFICER
  SERVICE_RENDERED
  ERROR
}

enum JobMessageDateFilterField {
  CREATION_DATE
}

type JobMessageDocument {
  documentId: String!
  attachmentIds: [String]
}

input JobMessageQueryParams {
  sortField: JobMessageSortField
  sortDirection: SortDirection
  stringFilters: [JobMessageBaseStringFilter]
  dateFilters: [JobMessageBaseDateFilter]
  statusFilters: [JobMessageBaseJobMessageStatusEnumFilter]
  transmissionStatusFilters: [JobMessageBaseJobMessageTransmissionStatusEnumFilter]
}

enum JobMessageSortField {
  ID
  TRACKING_ID
  NAME
}

enum JobMessageStatus {
  PROCESSING
  COMPLETED
  ERROR
  CANCELED
}

type JobMessageStatusCount {
  type: JobMessageType!
  totalCount: Int!
  completedCount: Int!
  errorCount: Int!
  canceledCount: Int!
  isPrimary: Boolean!
}

enum JobMessageStatusFilterField {
  STATUS
}

enum JobMessageStringFilterField {
  TENANT_ID
  TRACKING_ID
  JOB_ID
  DOCUMENT_ID
  EXTERNAL_ID
}

enum JobMessageTransmissionStatus {
  PENDING
  SUCCESS
  UNKNOWN_EMAIL_TRANSMISSION_ERROR
  UNKNOWN_WEB_NOTIFICATION_TRANSMISSION_ERROR
  UNKNOWN_POSTAL_TRANSMISSION_ERROR
  WRONG_DELIVERY_ADDRESS
  INVALID_DOCUMENT
  UNKNOWN_CHORUS_B_2_G_TRANSMISSION_ERROR
  VALIDATION_ERROR
  EXPIRED_CREDENTIALS
  STATUS_DELAY_EXPIRED
  REJECTED
}

enum JobMessageTransmissionStatusFilterField {
  TRANSMISSION_STATUS
}

enum JobMessageType {
  EMAIL
  POSTAL
  WEB_NOTIFICATION
  CHORUS
}

type JobMessageTypeConnection {
  edges: [JobMessage]
  pageInfo: PageInfo
}

input JobQueryParams {
  sortField: JobSortField
  sortDirection: SortDirection
  stringFilters: [JobBaseStringFilter]
  dateFilters: [JobBaseDateFilter]
  statusFilters: [JobBaseJobBaseStatusEnumFilter]
  jobTypeFilters: [JobBaseJobBaseTypeEnumFilter]
}

type JobResult {
  jobNumber: Int!
}

enum JobSortField {
  ID
  TRACKING_ID
  SERVICE_ID
  COMPLETED_DATE
  CREATION_DATE
  STATUS
  JOB_TYPE
}

enum JobStatus {
  NEW_JOB_SETUP
  PROCESSING_PREVIEW
  PROOF_PENDING
  PROOF_TRANSMITED
  AWAITING_TIMEOUT_TO_LAUNCH
  PROOF_FAILED
  LAUNCH_IN_PROGRESS
  SUSPENDED_DURING_LAUNCH
  CANCELED_DURING_LAUNCH
  QUOTA_LAUNCH_ERROR
  LAUNCH_FAILED
  ACTIVE
  QUOTA_REACHED
  SUSPENDED
  CANCELED
  CANCEL_IN_PROGRESS
  PROOF_CANCELED
  RESUBMIT_IN_PROCESS
  COMPLETED
  FINISHED
  ARCHIVED
}

enum JobStatusFilterField {
  STATUS
}

enum JobStringFilterField {
  TENANT_ID
  TRACKING_ID
  SERVICE_ID
}

type JobSummary {
  jobNumber: Int!
  jobType: String!
  customerNumber: Int!
  login: String!
  mostRecentDate: DateTime!
  status: JobStatus!
  tID: String
  total: Int!
  sent: Int!
  failed: Int!
  remaining: Int!
  retries: Int!
  firstDoc: String
  firstList: String
  page: Int!
  pageSent: Int!
  media: Media!
  creationDate: DateTime!
  startDate: DateTime!
  applicationId: Int
  isProofJob: Boolean!
}

input JobSummaryBoolFilter {
  field: JobSummaryBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum JobSummaryBoolFilterField {
  ONLY_NOT_SENT
  ALL_SUB_ACCOUNTS
  IS_PROOF
}

input JobSummaryDateFilter {
  field: JobSummaryDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum JobSummaryDateFilterField {
  MOST_RECENT_DATE
}

input JobSummaryMediaEnumFilter {
  field: JobSummaryMediaFilterField!
  operator: NumberFilterOperator!
  filterValue1: Media!
  filterValue2: Media
}

enum JobSummaryMediaFilterField {
  MEDIA
}

input JobSummaryQueryParams {
  sortField: JobSummarySortField
  sortDirection: SortDirection
  stringFilters: [JobSummaryStringFilter]
  dateFilters: [JobSummaryDateFilter]
  boolFilters: [JobSummaryBoolFilter]
  mediaFilters: [JobSummaryMediaEnumFilter]
}

enum JobSummarySortField {
  JOB_NUMBER
  DATE
  STATUS
  REFERENCE
  TOTAL
  SENT
  FAILED
  REMAINING
  MEDIA
  CREATION_DATE
  START_DATE
}

input JobSummaryStringFilter {
  field: JobSummaryStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum JobSummaryStringFilterField {
  JOB_NUMBER
  TID
}

type JobSummaryTypeConnection {
  edges: [JobSummary]
  pageInfo: PageInfo
}

type JobTypeConnection {
  edges: [Job]
  pageInfo: PageInfo
}

enum JobTypeFilterField {
  JOB_TYPE
}

type KeyValue {
  key: String!
  value: String
}

type KeyValuePair {
  key: String!
  value: String
}

input KeyValuePairInput {
  key: String!
  value: String
}

enum Language {
  UKN
  EN
  FR
}

scalar Long

enum LreArManagementType {
  MANUAL
  ELECTRONIC
}

enum Media {
  FAX
  SMS
  VOICE
  POSTAL
  PUSH_NOTIFICATION
  EMAIL
  FAX_EMAIL
}

type MetadataConfig {
  metadataCode: String!
  dataType: GedFieldDataType!
  isMandatory: Boolean!
  isFilterable: Boolean!
  isEditable: Boolean!
  isArchivable: Boolean!
  defaultValue: String
  expectedFormat: String
}

input MetadataConfigInput {
  metadataCode: String!
  dataType: GedFieldDataType!
  isMandatory: Boolean!
  isFilterable: Boolean!
  isEditable: Boolean!
  isArchivable: Boolean!
  defaultValue: String
  expectedFormat: String
}

type Nature {
  id: String!
  cycle: NatureCycle!
  natureType: NatureCategory!
  code: String!
  label: String!
  metadataConfigs: [MetadataConfig]
  archiveConfiguration: ArchiveConfiguration
}

enum NatureCategory {
  DOCUMENT_MODEL
  TRANSMISSION_MODE
}

enum NatureCycle {
  P_2_P
  O_2_C
  MISC
}

input NatureQueryParams {
  sortField: NatureSortField
  sortDirection: SortDirection
}

enum NatureSortField {
  CODE
  LABEL
}

type NatureTypeConnection {
  edges: [Nature]
  pageInfo: PageInfo
}

type Note {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  ownerId: String!
  ownerType: NoteOwnerType!
  text: String!
}

input NoteInput {
  id: String
  ownerId: String!
  ownerType: NoteOwnerType!
  text: String!
}

input NoteNoteOwnerTypeEnumFilter {
  field: NoteOwnerTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: NoteOwnerType!
  filterValue2: NoteOwnerType
}

enum NoteOwnerType {
  SERVICE
  THIRD_PARTY
}

enum NoteOwnerTypeFilterField {
  OWNER_TYPE
}

input NoteQueryParams {
  sortField: NoteSortField
  sortDirection: SortDirection
  stringFilters: [NoteStringFilter]
  ownerTypeFilters: [NoteNoteOwnerTypeEnumFilter]
}

enum NoteSortField {
  CREATION_DATE
  LAST_MODIFICATION_DATE
}

input NoteStringFilter {
  field: NoteStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum NoteStringFilterField {
  OWNER_ID
}

type NoteTypeConnection {
  edges: [Note]
  pageInfo: PageInfo
}

enum NumberFilterOperator {
  EQUAL
  NOT_EQUAL
  BETWEEN
  GREATER_THAN_OR_EQUAL
  GREATER_THAN
  LOWER_THAN_OR_EQUAL
  LOWER_THAN
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IS_NULL
  IS_NOT_NULL
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
}

type PostalAddress {
  additionalGeographicInfo: String
  additionalInfo: String
  city: String
  country: String
  name: String
  postBox: String
  street: String
  zipCode: String
}

input PostalAddressInput {
  additionalGeographicInfo: String
  additionalInfo: String
  city: String!
  country: String!
  name: String!
  postBox: String
  street: String!
  zipCode: String!
}

input PostalAdhocRecipientInput {
  name: String!
  address: PostalAddressInput
  isPrimary: Boolean
}

type PostalJob {
  id: String!
  tenantId: String!
  trackingId: String!
  completedDate: DateTime
  status: JobBaseStatus!
  documentIds: [String]
  serviceId: String
  note: String
  creationDate: DateTime
  jobType: JobBaseType
  recipientCount: Int!
  sentCount: Int!
  failedCount: Int!
  undeliveredCount: Int!
  parameter: PostalParameter
}

input PostalJobDateFilter {
  field: JobDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

input PostalJobInput {
  trackingId: String
  adhocRecipientFiles: [FileIdOrNewInputType]
  postalAdhocRecipients: [PostalAdhocRecipientInput]
  documents: [FileIdOrNewInputType]
  parameter: PostalParameterInput
  serviceId: String
  note: String
}

input PostalJobJobBaseStatusEnumFilter {
  field: JobStatusFilterField!
  operator: NumberFilterOperator!
  filterValue1: JobBaseStatus!
  filterValue2: JobBaseStatus
}

input PostalJobQueryParams {
  sortField: JobSortField
  sortDirection: SortDirection
  stringFilters: [PostalJobStringFilter]
  dateFilters: [PostalJobDateFilter]
  statusFilters: [PostalJobJobBaseStatusEnumFilter]
  jobTypeFilters: [JobBaseJobBaseTypeEnumFilter]
}

input PostalJobStringFilter {
  field: JobStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

type PostalJobTypeConnection {
  edges: [PostalJob]
  pageInfo: PageInfo
}

type PostalParameter {
  envelope: EnvelopeType
  stamp: StampType
  printBothSide: Boolean
  printColor: Boolean
  lreArManagement: LreArManagementType
  mergeDocuments: Boolean
  sender: PostalAddress
}

type PostalParameterConfiguration {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  envelope: EnvelopeType
  stamp: StampType
  printBothSide: Boolean
  printColor: Boolean
  lreArManagement: LreArManagementType
  mergeDocuments: Boolean
  sender: PostalAddress
}

input PostalParameterConfigurationInheritedConfigurationOwnerTypeEnumFilter {
  field: PostalParameterConfigurationOwnerTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: InheritedConfigurationOwnerType!
  filterValue2: InheritedConfigurationOwnerType
}

input PostalParameterConfigurationInput {
  id: String
  ownerId: String!
  ownerType: InheritedConfigurationOwnerType!
  envelope: EnvelopeType
  stamp: StampType
  printBothSide: Boolean
  printColor: Boolean
  lreArManagement: LreArManagementType
  mergeDocuments: Boolean
  sender: PostalAddressInput
}

enum PostalParameterConfigurationOwnerTypeFilterField {
  OWNER_TYPE
}

input PostalParameterConfigurationQueryParams {
  sortField: PostalParameterConfigurationSortField
  sortDirection: SortDirection
  stringFilters: [PostalParameterConfigurationStringFilter]
  ownerTypeFilters: [PostalParameterConfigurationInheritedConfigurationOwnerTypeEnumFilter]
}

enum PostalParameterConfigurationSortField {
  CREATION_DATE
  LAST_MODIFICATION_DATE
  OWNER_ID
}

input PostalParameterConfigurationStringFilter {
  field: PostalParameterConfigurationStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum PostalParameterConfigurationStringFilterField {
  OWNER_ID
}

type PostalParameterConfigurationTypeConnection {
  edges: [PostalParameterConfiguration]
  pageInfo: PageInfo
}

input PostalParameterInput {
  envelope: EnvelopeType
  stamp: StampType
  printBothSide: Boolean
  printColor: Boolean
  lreArManagement: LreArManagementType
  mergeDocuments: Boolean
  sender: PostalAddressInput
}

type PowerBiAuthToken {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  accessToken: String!
  embedUrl: String!
}

enum ProcessingStatus {
  COMPLETED
  ERROR
}

enum ProcessingType {
  REDIRECT_EMAIL
}

input PushJob {
  jobType: String
  trackingId: String
  scheduledStartTime: DateTime
  adhocRecipientFiles: [FileIdOrNewInputType]
  deDuplicate: Boolean
  adhocRecipients: [Recipient]
  text: String!
  parameter: PushParameter
}

input PushParameter {
  applicationId: Int
  title: String
  badgeCount: Int
  expirationDuration: Int
  soundFileName: String
  isSilent: Boolean
  isByToken: Boolean
  activateTracking: Boolean
}

input Recipient {
  address: String!
  name: String
  optionalFields: [String]
}

type RedirectEmailConfiguration {
  id: String!
  tenantId: String!
  address: String!
  transmissionMode: DocumentTransmissionMode!
  isEnabled: Boolean!
  documentTypeId: String!
  creationDate: DateTime!
  lastModificationDate: DateTime!
}

input RedirectEmailConfigurationBoolFilter {
  field: RedirectEmailConfigurationBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum RedirectEmailConfigurationBoolFilterField {
  IS_ENABLED
}

input RedirectEmailConfigurationDocumentTransmissionModeEnumFilter {
  field: RedirectEmailConfigurationTransmissionModeFilterField!
  operator: NumberFilterOperator!
  filterValue1: DocumentTransmissionMode!
  filterValue2: DocumentTransmissionMode
}

input RedirectEmailConfigurationInput {
  address: String!
  tenantId: String!
  transmissionMode: DocumentTransmissionMode!
  isEnabled: Boolean!
  documentTypeId: String!
}

input RedirectEmailConfigurationQueryParams {
  sortField: RedirectEmailConfigurationSortField
  sortDirection: SortDirection
  stringFilters: [RedirectEmailConfigurationStringFilter]
  boolFilters: [RedirectEmailConfigurationBoolFilter]
  transmissionModeFilters: [RedirectEmailConfigurationDocumentTransmissionModeEnumFilter]
}

enum RedirectEmailConfigurationSortField {
  TENANT_ID
  DOCUMENT_TYPE_ID
  ADDRESS
  TRANSMISSION_MODE
  IS_ENABLED
  CREATION_DATE
  LAST_MODIFICATION_DATE
}

input RedirectEmailConfigurationStringFilter {
  field: RedirectEmailConfigurationStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum RedirectEmailConfigurationStringFilterField {
  DOCUMENT_TYPE_ID
  ADDRESS
}

enum RedirectEmailConfigurationTransmissionModeFilterField {
  TRANSMISSION_MODE
}

type RedirectEmailConfigurationTypeConnection {
  edges: [RedirectEmailConfiguration]
  pageInfo: PageInfo
}

type RegisteredPostalOptions {
  anonymous: Boolean!
}

input RegisteredPostalOptionsInput {
  anonymous: Boolean!
}

input RelaunchJobMessageOptionsInput {
  transmissionStatus: JobMessageTransmissionStatus
  domainId: String
  tenantId: String
  jobId: String
  documentId: String
  messageType: JobMessageType
  jobMessageId: String
}

"""The application rights action type."""
enum RightActionType {
  READ
  CHANGE
}

type RightInitialValue {
  right: RightType!
  initialValue: Boolean!
  category: String
  subCategory: String
  actionType: RightActionType
}

input RightInitialValueBoolFilter {
  field: RightInitialValueBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum RightInitialValueBoolFilterField {
  INITIAL_VALUE
}

input RightInitialValueQueryParams {
  sortField: RightInitialValueSortField
  sortDirection: SortDirection
  boolFilters: [RightInitialValueBoolFilter]
  rightTypeFilters: [RightInitialValueRightTypeEnumFilter]
}

input RightInitialValueRightTypeEnumFilter {
  field: RightInitialValueRightTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: RightType!
  filterValue2: RightType
}

enum RightInitialValueRightTypeFilterField {
  RIGHT
}

enum RightInitialValueSortField {
  INITIAL_VALUE
  RIGHT
}

type RightInitialValueTypeConnection {
  edges: [RightInitialValue]
  pageInfo: PageInfo
}

"""The application rights."""
enum RightType {
  """Get or list environments"""
  READ_ENVIRONMENT

  """Create environments"""
  ADD_ENVIRONMENT

  """Edit environments"""
  EDIT_ENVIRONMENT

  """Get or list domains"""
  READ_DOMAIN

  """Create or edit domains"""
  CHANGE_DOMAIN

  """Get or list tenants"""
  READ_TENANT

  """Create tenants"""
  ADD_TENANT

  """Edit tenants"""
  EDIT_TENANT

  """List user rights"""
  READ_RIGHT

  """Grant user rights"""
  GRANT_RIGHT

  """Grant internal user rights"""
  GRANT_INTERNAL_RIGHT

  """Get or list tenant users"""
  READ_TENANT_USER

  """Create or edit tenant users"""
  CHANGE_TENANT_USER

  """Get or list domain administrators"""
  READ_DOMAIN_USER

  """Create or edit domain administrators"""
  CHANGE_DOMAIN_USER

  """Get or list environment administrators"""
  READ_ENVIRONMENT_USER

  """Create or edit environment administrators"""
  CHANGE_ENVIRONMENT_USER

  """Get or list Api users"""
  READ_TENANT_API_USER

  """Create, edit or renew Api users"""
  CHANGE_TENANT_API_USER

  """Get or list services"""
  READ_SERVICE

  """Create, edit or delete services"""
  CHANGE_SERVICE

  """Get or list third party types"""
  READ_THIRD_PARTY_TYPE

  """Create, edit or delete third party types"""
  CHANGE_THIRD_PARTY_TYPE

  """Get or list third parties"""
  READ_THIRD_PARTY

  """Create, edit or delete third parties"""
  CHANGE_THIRD_PARTY

  """Get or list contact functions"""
  READ_CONTACT_FUNCTION

  """Create, edit or delete contact functions"""
  CHANGE_CONTACT_FUNCTION

  """Get or list contacts"""
  READ_CONTACT

  """Create, edit or delete contacts"""
  CHANGE_CONTACT

  """Get or list document types"""
  READ_DOCUMENT_TYPE

  """Create, edit or delete document types"""
  CHANGE_DOCUMENT_TYPE

  """Get or list documents sent to the user"""
  READ_DOCUMENT

  """Get or list documents sent to the service of the user"""
  READ_DOCUMENT_ON_SERVICE

  """Create, edit or delete documents"""
  CHANGE_DOCUMENT

  """Get or list tenants with internal info"""
  READ_TENANT_EDC_OMS_INFO

  """Create or edit tenant internal info"""
  CHANGE_TENANT_EDC_OMS_INFO

  """Get or list products"""
  READ_PRODUCT

  """Create or edit products"""
  CHANGE_PRODUCT

  """Get or list product installs"""
  READ_PRODUCT_INSTALL

  """Create or edit product installs"""
  CHANGE_PRODUCT_INSTALL

  """Get or list configurations"""
  READ_CONFIGURATION

  """Create or edit configurations"""
  CHANGE_CONFIGURATION

  """Get or list notes"""
  READ_NOTE

  """Create or edit notes"""
  CHANGE_NOTE

  """Get or list OMS resources"""
  READ_OMS_RESOURCES

  """Create or edit OMS resources"""
  CHANGE_OMS_RESOURCES

  """Synchronize EDC resources"""
  SYNCHRONIZE_EDC_RESOURCES

  """Create or edit PowerBi auth token"""
  CHANGE_POWER_BI_AUTH_TOKEN

  """Validate invited user"""
  VALIDATE_USER

  """Get or list list of values"""
  READ_LIST_OF_VALUES

  """Create, edit or delete list of values"""
  CHANGE_LIST_OF_VALUES

  """Get or list metadatas"""
  READ_METADATA

  """Create, edit or delete metadatas"""
  CHANGE_METADATA

  """Get or list dashboards"""
  READ_DASHBOARD

  """Create, edit or delete dashboards"""
  CHANGE_DASHBOARD

  """Get or list documentJobs"""
  READ_DOCUMENT_JOB

  """Create documentJob"""
  CHANGE_DOCUMENT_JOB

  """Get or list jobMessages"""
  READ_JOB_MESSAGE

  """Create, edit or delete jobMessage"""
  CHANGE_JOB_MESSAGE

  """Get or list activities"""
  READ_ACTIVITY

  """Create, edit or delete activities"""
  CHANGE_ACTIVITY

  """Get or list template structures"""
  READ_TEMPLATE_STRUCTURE

  """Create, edit or delete template structures"""
  CHANGE_TEMPLATE_STRUCTURE

  """Get or list template contents"""
  READ_TEMPLATE_CONTENT

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_CONTENT

  """Get or list postalJobs"""
  READ_POSTAL_JOB

  """Create postalJob"""
  CHANGE_POSTAL_JOB

  """Get or list Domain Api users"""
  READ_DOMAIN_API_USER

  """Create, edit or renew Domain Api users"""
  CHANGE_DOMAIN_API_USER

  """Get or list Environment Api users"""
  READ_ENVIRONMENT_API_USER

  """Create, edit or renew Environment Api users"""
  CHANGE_ENVIRONMENT_API_USER

  """Mark document as read"""
  READ_CLICKED_LINK_DOCUMENT

  """Read clicked link document"""
  MARK_DOCUMENT_AS_READ

  """Create, edit or delete document links"""
  CHANGE_CLICKED_LINK_DOCUMENT

  """Resend document to chorusRight"""
  RESEND_DOCUMENT

  """Complete document"""
  COMPLETE_DOCUMENT

  """RelaunchJobMessage"""
  RELAUNCH_JOB_MESSAGE

  """Get or list template variables configuration"""
  READ_TEMPLATE_VARIABLE_CONFIGURATION

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_VARIABLE_CONFIGURATION

  """CancelJobMessage"""
  CANCEL_JOB_MESSAGE

  """Get or list postal parameter configurations"""
  READ_POSTAL_PARAMETER_CONFIGURATION

  """Create, edit or delete postal parameter configurations"""
  CHANGE_POSTAL_PARAMETER_CONFIGURATION

  """Get or list status actions"""
  READ_STATUS_ACTION

  """Get or list callback configurations"""
  READ_CALLBACK_CONFIGURATION

  """Create, edit or delete callback configurations"""
  CHANGE_CALLBACK_CONFIGURATION

  """Get or list api routing configurations"""
  READ_ROUTING_CONFIGURATION

  """Create, edit or delete api routing configurations"""
  CHANGE_ROUTING_CONFIGURATION

  """Edit Tenant postal config"""
  EDIT_TENANT_POSTAL_CONFIG

  """Get or list data file action"""
  READ_DATA_FILE_ACTION

  """Create, edit or delete data file action"""
  CHANGE_DATA_FILE_ACTION
}

input RightValueBoolFilter {
  field: RightValueBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum RightValueBoolFilterField {
  VALUE
}

input RightValueQueryParams {
  sortField: RightValueSortField
  sortDirection: SortDirection
  boolFilters: [RightValueBoolFilter]
}

enum RightValueSortField {
  VALUE
  RIGHT
}

type RoutingConfiguration {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  queueName: String
  isEnabled: Boolean!
  apiRoutingConfig: ApiRoutingConfiguration
  smtpRoutingConfig: SmtpRoutingConfiguration
}

input RoutingConfigurationBoolFilter {
  field: RoutingConfigurationBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum RoutingConfigurationBoolFilterField {
  IS_ENABLED
}

input RoutingConfigurationInheritedConfigurationOwnerTypeEnumFilter {
  field: RoutingConfigurationOwnerTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: InheritedConfigurationOwnerType!
  filterValue2: InheritedConfigurationOwnerType
}

input RoutingConfigurationInput {
  id: String
  ownerId: String!
  ownerType: InheritedConfigurationOwnerType!
  queueName: String!
  isEnabled: Boolean
  apiRoutingConfig: ApiRoutingConfigurationInput
  smtpRoutingConfig: SmtpRoutingConfigurationInput
}

enum RoutingConfigurationOwnerTypeFilterField {
  OWNER_TYPE
}

input RoutingConfigurationQueryParams {
  sortField: RoutingConfigurationSortField
  sortDirection: SortDirection
  stringFilters: [RoutingConfigurationStringFilter]
  boolFilters: [RoutingConfigurationBoolFilter]
  ownerTypeFilters: [RoutingConfigurationInheritedConfigurationOwnerTypeEnumFilter]
}

enum RoutingConfigurationSortField {
  FORMAT
  ACTION
  QUEUE_NAME
  OWNER_ID
  OWNER_TYPE
  CREATION_DATE
  LAST_MODIFICATION_DATE
}

input RoutingConfigurationStringFilter {
  field: RoutingConfigurationStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum RoutingConfigurationStringFilterField {
  FORMAT
  ACTION
  QUEUE_NAME
  OWNER_ID
}

type RoutingConfigurationTypeConnection {
  edges: [RoutingConfiguration]
  pageInfo: PageInfo
}

type Service {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  name: String!
  tenantUserCount: Int!
  hasCustomSmtpConfig: Boolean!
  customSmtpConfig: SmtpConfig
  isEnabled: Boolean!
  chorusB2GConfig: ChorusB2GConfig
  code: String
}

input ServiceBoolFilter {
  field: ServiceBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ServiceBoolFilterField {
  IS_ENABLED
  HAS_CUSTOM_SMTP_CONFIG
}

input ServiceInput {
  id: String
  name: String!
  customSmtpConfig: SmtpConfigInput
  isEnabled: Boolean
  chorusB2GConfig: ChorusB2GConfigInput
  code: String
}

input ServiceIntFilter {
  field: ServiceIntFilterField!
  operator: NumberFilterOperator!
  filterValue1: Int!
  filterValue2: Int
}

enum ServiceIntFilterField {
  TENANT_USER_COUNT
}

input ServiceQueryParams {
  sortField: ServiceSortField
  sortDirection: SortDirection
  stringFilters: [ServiceStringFilter]
  intFilters: [ServiceIntFilter]
  boolFilters: [ServiceBoolFilter]
}

enum ServiceSortField {
  NAME
  TENANT_USER_COUNT
  HAS_CUSTOM_SMTP_CONFIG
  IS_ENABLED
}

input ServiceStringFilter {
  field: ServiceStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ServiceStringFilterField {
  NAME
}

type ServiceTypeConnection {
  edges: [Service]
  pageInfo: PageInfo
}

enum SmsContentType {
  TEXT
  BINARY
  UNICODE
}

input SmsJob {
  jobType: String
  trackingId: String
  scheduledStartTime: DateTime
  adhocRecipientFiles: [FileIdOrNewInputType]
  deDuplicate: Boolean
  adhocRecipients: [Recipient]
  text: String!
  parameter: SmsParameter
}

input SmsParameter {
  sender: String
  contentType: SmsContentType
  smsFlash: Boolean
  lifeSpan: Int
  shortUrl: Boolean
  shortUrlGeotagging: Boolean
  formsManagement: Boolean
  allowMultiPartition: Boolean
  maxPartition: Int
  shortUrlTracking: Boolean
}

type SmtpConfig {
  errorAddress: String
  hasSmtpSsl: Boolean
  replyAddress: String
  senderAddress: String
  senderName: String
  smtpLogin: String
  smtpPassword: String
  smtpPort: Int
  smtpServer: String
}

input SmtpConfigInput {
  errorAddress: String
  hasSmtpSsl: Boolean
  replyAddress: String
  senderAddress: String!
  senderName: String!
  smtpLogin: String
  smtpPassword: String
  smtpPort: Int
  smtpServer: String
}

type SmtpRoutingConfiguration {
  froms: [String]
  to: String!
  subject: String!
  attachmentName: String!
  headers: [KeyValuePair]
  metadataList: [GedField]
}

input SmtpRoutingConfigurationInput {
  froms: [String]
  to: String!
  subject: String!
  attachmentName: String!
  headers: [KeyValuePairInput]
  metadataList: [GedFieldInput]
}

enum SortDirection {
  ASCENDING
  DESCENDING
}

enum StampType {
  LETTRE_VERTE
  NORMAL
  INDUSTRIEL
  RECOMMANDE
  INDUSTRIEL_JPLUS_4
}

type StatusAction {
  creationDate: DateTime
  lastModificationDate: DateTime
  id: String!
  category: String!
  status: String!
  action: String!
}

input StatusActionQueryParams {
  sortField: StatusActionSortField
  sortDirection: SortDirection
  stringFilters: [StatusActionStringFilter]
}

enum StatusActionSortField {
  ID
  CATEGORY
  STATUS
  ACTION
}

input StatusActionStringFilter {
  field: StatusActionStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum StatusActionStringFilterField {
  ID
  CATEGORY
  STATUS
  ACTION
}

type StatusActionTypeConnection {
  edges: [StatusAction]
  pageInfo: PageInfo
}

type StatusCounts {
  key: DocumentStatus!
  value: Long!
}

enum StringFilterOperator {
  EQUAL
  NOT_EQUAL
  START_WITH
  NOT_START_WITH
  END_WITH
  NOT_END_WITH
  CONTAIN
  NOT_CONTAIN
  EQUAL_OR_UNDEFINED
  DEFINED
  UNDEFINED
  IN_ARRAY
  IS_NULL
  IS_NOT_NULL
}

type SubStatusCounts {
  key: DocumentSubStatus!
  value: Long!
}

type TemplateContent {
  id: String!
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  subject: String
  content: String!
  isEnabled: Boolean!
  notificationType: TemplateContentNotificationType!
  transmissionType: TemplateContentTransmissionType!
  creationDate: DateTime!
}

input TemplateContentBoolFilter {
  field: TemplateContentBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum TemplateContentBoolFilterField {
  IS_ENABLED
}

input TemplateContentDateFilter {
  field: TemplateContentDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum TemplateContentDateFilterField {
  CREATION_DATE
}

input TemplateContentInheritedConfigurationOwnerTypeEnumFilter {
  field: TemplateContentOwnerTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: InheritedConfigurationOwnerType!
  filterValue2: InheritedConfigurationOwnerType
}

input TemplateContentInput {
  id: String
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  subject: String
  content: String!
  notificationType: TemplateContentNotificationType!
  transmissionType: TemplateContentTransmissionType!
  isEnabled: Boolean!
}

enum TemplateContentNotificationType {
  INVITE_USER
  NEW_USER_LOGIN
  NEW_USER_PASSWORD
  ADD_USER_TO_TENANT
  LSE
  LSE_ANONYMOUS
  ERE
  ERE_ANONYMOUS
  LSE_ERE_END_OF_JOB
  DOCUMENT_NOTIFICATION
  DOCUMENT_NOTIFICATION_WITH_LINK
  DOCUMENT_NOTIFICATION_LINK
  INTERNAL_NOT_ARCHIVED_FILES
  ACTIVITY_DOCUMENT_SIGNED
  ACTIVITY_DOCUMENT_ARCHIVED
  ACTIVITY_DOCUMENT_CANCELED
  ACTIVITY_DOCUMENT_READ
  ACTIVITY_EDIT_METADATA_DOCUMENT
  ACTIVITY_ADD_ATTACHMENTS_DOCUMENT
  ACTIVITY_JOB_CREATED
  ACTIVITY_JOB_LAUNCHED
  ACTIVITY_JOB_PROCESSING
  ACTIVITY_JOB_PRE_PROCESSED
  ACTIVITY_NOTIFICATION_SENT
  ACTIVITY_SEND_CHORUS_B_2_G
  ACTIVITY_CHANGE_STATUS_CHORUS_B_2_G
  ACTIVITY_COMPLETE_CHORUS_B_2_G
  ACTIVITY_CANCEL_JOB_MESSAGE
  ACTIVITY_ADD_DATA_FILE_ACTION
  ACTIVITY_EXTERNAL_PROCESS
  ACTIVITY_ERROR
  CALLBACK_DOCUMENT_SIGNED
  CALLBACK_DOCUMENT_ARCHIVED
  CALLBACK_DOCUMENT_CANCELED
  CALLBACK_DOCUMENT_READ
  CALLBACK_EDIT_METADATA_DOCUMENT
  CALLBACK_ADD_ATTACHMENTS_DOCUMENT
  CALLBACK_JOB_CREATED
  CALLBACK_JOB_LAUNCHED
  CALLBACK_JOB_PROCESSING
  CALLBACK_JOB_PRE_PROCESSED
  CALLBACK_NOTIFICATION_SENT
  CALLBACK_SEND_CHORUS_B_2_G
  CALLBACK_CHANGE_STATUS_CHORUS_B_2_G
  CALLBACK_COMPLETE_CHORUS_B_2_G
  CALLBACK_CANCEL_JOB_MESSAGE
  CALLBACK_EXTERNAL_PROCESS
  REDIRECT_EMAIL_THIRD_PARTY_ERROR_RESPONSE
  REDIRECT_EMAIL_ATTACHMENT_ERROR_RESPONSE
  REDIRECT_EMAIL_PDF_ERROR_RESPONSE
}

enum TemplateContentNotificationTypeFilterField {
  NOTIFICATION_TYPE
}

enum TemplateContentOwnerTypeFilterField {
  OWNER_TYPE
}

input TemplateContentQueryParams {
  sortField: TemplateContentSortField
  sortDirection: SortDirection
  stringFilters: [TemplateContentStringFilter]
  boolFilters: [TemplateContentBoolFilter]
  dateFilters: [TemplateContentDateFilter]
  ownerTypeFilters: [TemplateContentInheritedConfigurationOwnerTypeEnumFilter]
  notificationTypeFilters: [TemplateContentTemplateContentNotificationTypeEnumFilter]
  transmissionTypeFilters: [TemplateContentTemplateContentTransmissionTypeEnumFilter]
}

enum TemplateContentSortField {
  CREATION_DATE
  OWNER_TYPE
  OWNER_ID
  IS_ENABLED
  NOTIFICATION_TYPE
  TRANSMISSION_TYPE
  SUBJECT
}

input TemplateContentStringFilter {
  field: TemplateContentStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum TemplateContentStringFilterField {
  ID
  OWNER_ID
  SUBJECT
}

input TemplateContentTemplateContentNotificationTypeEnumFilter {
  field: TemplateContentNotificationTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: TemplateContentNotificationType!
  filterValue2: TemplateContentNotificationType
}

input TemplateContentTemplateContentTransmissionTypeEnumFilter {
  field: TemplateContentTransmissionTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: TemplateContentTransmissionType!
  filterValue2: TemplateContentTransmissionType
}

enum TemplateContentTransmissionType {
  EMAIL
  WEB_NOTIFICATION
  SMS
  JSON
  NONE
}

enum TemplateContentTransmissionTypeFilterField {
  TRANSMISSION_TYPE
}

type TemplateContentTypeConnection {
  edges: [TemplateContent]
  pageInfo: PageInfo
}

type TemplateStructure {
  id: String!
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  isEnabled: Boolean!
  contentId: String!
  contentBase64: String!
  creationDate: DateTime!
}

input TemplateStructureBoolFilter {
  field: TemplateStructureBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum TemplateStructureBoolFilterField {
  IS_ENABLED
}

input TemplateStructureDateFilter {
  field: TemplateStructureDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum TemplateStructureDateFilterField {
  CREATION_DATE
}

input TemplateStructureInheritedConfigurationOwnerTypeEnumFilter {
  field: TemplateStructureOwnerTypeFilterField!
  operator: NumberFilterOperator!
  filterValue1: InheritedConfigurationOwnerType!
  filterValue2: InheritedConfigurationOwnerType
}

input TemplateStructureInput {
  id: String
  ownerId: String
  ownerType: InheritedConfigurationOwnerType!
  isEnabled: Boolean!
  contentBase64: String!
}

enum TemplateStructureOwnerTypeFilterField {
  OWNER_TYPE
}

input TemplateStructureQueryParams {
  sortField: TemplateStructureSortField
  sortDirection: SortDirection
  stringFilters: [TemplateStructureStringFilter]
  boolFilters: [TemplateStructureBoolFilter]
  dateFilters: [TemplateStructureDateFilter]
  ownerTypeFilters: [TemplateStructureInheritedConfigurationOwnerTypeEnumFilter]
}

enum TemplateStructureSortField {
  CREATION_DATE
  OWNER_TYPE
  OWNER_ID
  IS_ENABLED
}

input TemplateStructureStringFilter {
  field: TemplateStructureStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum TemplateStructureStringFilterField {
  ID
  OWNER_ID
}

type TemplateStructureTypeConnection {
  edges: [TemplateStructure]
  pageInfo: PageInfo
}

type TemplateVariable {
  name: String!
  replacementTag: String!
  description: String
}

type TemporaryDocumentContent {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  name: String!
  size: Long!
  storageEndDate: DateTime
  metadata: [KeyValuePair]
  content: String!
}

input TemporaryDocumentContentInput {
  id: String
  name: String!
  tenantId: String!
  metadata: [KeyValuePairInput]
  content: String!
}

input TemporaryDocumentFileInput {
  file: FileContentInput
  tenantId: String
}

type TemporaryDocumentHeader {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  name: String!
  size: Long!
  storageEndDate: DateTime
  metadata: [KeyValuePair]
}

input TemporaryDocumentHeaderDateFilter {
  field: TemporaryDocumentHeaderDateFilterField!
  operator: NumberFilterOperator!
  filterValue1: DateTime
  filterValue2: DateTime
}

enum TemporaryDocumentHeaderDateFilterField {
  CREATION_DATE
  STORAGE_END_DATE
}

input TemporaryDocumentHeaderQueryParams {
  sortField: TemporaryDocumentHeaderSortField
  sortDirection: SortDirection
  stringFilters: [TemporaryDocumentHeaderStringFilter]
  dateFilters: [TemporaryDocumentHeaderDateFilter]
}

enum TemporaryDocumentHeaderSortField {
  NAME
  CREATION_DATE
  STORAGE_END_DATE
  SIZE
}

input TemporaryDocumentHeaderStringFilter {
  field: TemporaryDocumentHeaderStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum TemporaryDocumentHeaderStringFilterField {
  NAME
  TENANT_ID
}

type TemporaryDocumentHeaderTypeConnection {
  edges: [TemporaryDocumentHeader]
  pageInfo: PageInfo
}

"""The application rights for tenant user."""
enum TenantRightType {
  """Get or list tenants"""
  READ_TENANT

  """Edit tenants"""
  EDIT_TENANT

  """Grant user rights"""
  GRANT_RIGHT

  """Grant internal user rights"""
  GRANT_INTERNAL_RIGHT

  """Get or list tenant users"""
  READ_TENANT_USER

  """Create or edit tenant users"""
  CHANGE_TENANT_USER

  """Get or list Api users"""
  READ_TENANT_API_USER

  """Create, edit or renew Api users"""
  CHANGE_TENANT_API_USER

  """Get or list services"""
  READ_SERVICE

  """Create, edit or delete services"""
  CHANGE_SERVICE

  """Get or list third party types"""
  READ_THIRD_PARTY_TYPE

  """Create, edit or delete third party types"""
  CHANGE_THIRD_PARTY_TYPE

  """Get or list third parties"""
  READ_THIRD_PARTY

  """Create, edit or delete third parties"""
  CHANGE_THIRD_PARTY

  """Get or list contact functions"""
  READ_CONTACT_FUNCTION

  """Create, edit or delete contact functions"""
  CHANGE_CONTACT_FUNCTION

  """Get or list contacts"""
  READ_CONTACT

  """Create, edit or delete contacts"""
  CHANGE_CONTACT

  """Get or list document types"""
  READ_DOCUMENT_TYPE

  """Create, edit or delete document types"""
  CHANGE_DOCUMENT_TYPE

  """Get or list documents sent to the user"""
  READ_DOCUMENT

  """Get or list documents sent to the service of the user"""
  READ_DOCUMENT_ON_SERVICE

  """Create, edit or delete documents"""
  CHANGE_DOCUMENT

  """Get or list tenants with internal info"""
  READ_TENANT_EDC_OMS_INFO

  """Create or edit tenant internal info"""
  CHANGE_TENANT_EDC_OMS_INFO

  """Get or list notes"""
  READ_NOTE

  """Create or edit notes"""
  CHANGE_NOTE

  """Get or list OMS resources"""
  READ_OMS_RESOURCES

  """Create or edit OMS resources"""
  CHANGE_OMS_RESOURCES

  """Validate invited user"""
  VALIDATE_USER

  """Get or list list of values"""
  READ_LIST_OF_VALUES

  """Create, edit or delete list of values"""
  CHANGE_LIST_OF_VALUES

  """Get or list metadatas"""
  READ_METADATA

  """Create, edit or delete metadatas"""
  CHANGE_METADATA

  """Get or list dashboards"""
  READ_DASHBOARD

  """Create, edit or delete dashboards"""
  CHANGE_DASHBOARD

  """Get or list documentJob"""
  READ_DOCUMENT_JOB

  """Create, edit or delete documentJob"""
  CHANGE_DOCUMENT_JOB

  """Get or list jobMessage"""
  READ_JOB_MESSAGE

  """Create, edit or delete jobMessage"""
  CHANGE_JOB_MESSAGE

  """Get or list activities"""
  READ_ACTIVITY

  """Create, edit or delete activities"""
  CHANGE_ACTIVITY

  """Get or list template structures"""
  READ_TEMPLATE_STRUCTURE

  """Create, edit or delete template structures"""
  CHANGE_TEMPLATE_STRUCTURE

  """Get or list template contents"""
  READ_TEMPLATE_CONTENT

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_CONTENT

  """Get or list mailJob"""
  READ_POSTAL_JOB

  """Create, edit or delete mailJob"""
  CHANGE_POSTAL_JOB

  """Create, edit or delete document links"""
  CHANGE_CLICKED_LINK_DOCUMENT

  """Resend document to chorusRight"""
  RESEND_DOCUMENT

  """Complete document"""
  COMPLETE_DOCUMENT

  """RelaunchJobMessage"""
  RELAUNCH_JOB_MESSAGE

  """Get or list template variables configuration"""
  READ_TEMPLATE_VARIABLE_CONFIGURATION

  """Create, edit or delete template contents"""
  CHANGE_TEMPLATE_VARIABLE_CONFIGURATION

  """CancelJobMessage"""
  CANCEL_JOB_MESSAGE

  """Get or list postal parameter configurations"""
  READ_POSTAL_PARAMETER_CONFIGURATION

  """Create, edit or delete postal parameter configurations"""
  CHANGE_POSTAL_PARAMETER_CONFIGURATION

  """Get or list status actions"""
  READ_STATUS_ACTION

  """Get or list callback configurations"""
  READ_CALLBACK_CONFIGURATION

  """Create, edit or delete callback configurations"""
  CHANGE_CALLBACK_CONFIGURATION

  """Get or list data file action"""
  READ_DATA_FILE_ACTION

  """Create data file action"""
  CHANGE_DATA_FILE_ACTION
}

type TenantRightValue {
  right: TenantRightType
  value: Boolean!
}

input TenantRightValueInput {
  right: TenantRightType
  value: Boolean!
}

type TenantRightValueTypeConnection {
  edges: [TenantRightValue]
  pageInfo: PageInfo
}

type TenantUser {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  civility: String!
  firstName: String!
  lastName: String!
  email: String!
  userId: String!
  phone: String!
  culture: String!
  timeZone: String!
  isEnabled: Boolean!
  lastConnectionDate: DateTime
  tenantId: String!
  documentAccessType: TenantUserDocumentAccessType!
  weeklyReport: Boolean!
  services: [IdName]
}

input TenantUserBoolFilter {
  field: TenantUserBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum TenantUserBoolFilterField {
  IS_ENABLED
}

enum TenantUserDocumentAccessType {
  RESTRICTED
  FULL
}

input TenantUserInput {
  id: String
  civility: String
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  culture: String
  timeZone: String
  isEnabled: Boolean
  documentAccessType: TenantUserDocumentAccessType!
  weeklyReport: Boolean!
  services: [IdNameInput]
}

input TenantUserQueryParams {
  sortField: TenantUserSortField
  sortDirection: SortDirection
  stringFilters: [TenantUserStringFilter]
  boolFilters: [TenantUserBoolFilter]
}

enum TenantUserSortField {
  CIVILITY
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  PHONE
  CULTURE
  TIME_ZONE
  DOCUMENT_ACCESS_TYPE
  WEEKLY_REPORT
  IS_ENABLED
}

input TenantUserStringFilter {
  field: TenantUserStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum TenantUserStringFilterField {
  FIRST_NAME
  LAST_NAME
  EMAIL
  USER_ID
  SERVICE_ID
}

type TenantUserTypeConnection {
  edges: [TenantUser]
  pageInfo: PageInfo
}

type ThirdParty {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  tenantId: String!
  code: String!
  personType: ThirdPartyPersonType!
  name: String!
  contactCount: Int!
  isEnabled: Boolean!
  thirdPartyTypeIds: [String]!
  address: PostalAddress
}

input ThirdPartyBoolFilter {
  field: ThirdPartyBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ThirdPartyBoolFilterField {
  IS_MORAL_PERSON
  IS_ENABLED
}

enum ThirdPartyIdentifierType {
  THIRDPARTY_ID
  FROM_GED_FIELDS
}

input ThirdPartyInput {
  id: String
  code: String!
  name: String!
  isEnabled: Boolean
  thirdPartyTypeIds: [String!]!
  address: PostalAddressInput
  personType: ThirdPartyPersonType!
}

enum ThirdPartyPersonType {
  PRIVATE_PERSON
  MORAL_PERSON_PRIVATE
  MORAL_PERSON_PUBLIC
}

input ThirdPartyQueryParams {
  sortField: ThirdPartySortField
  sortDirection: SortDirection
  stringFilters: [ThirdPartyStringFilter]
  boolFilters: [ThirdPartyBoolFilter]
}

input ThirdPartyRecipientInput {
  thirdPartyIdentifierType: ThirdPartyIdentifierType!
  thirdPartyIdentifier: String!
  contactFunctionCodes: [String]
  updateOptions: ThirdPartyUpdateOptionsInput
}

enum ThirdPartySortField {
  CODE
  NAME
  IS_MORAL_PERSON
  IS_ENABLED
}

input ThirdPartyStringFilter {
  field: ThirdPartyStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ThirdPartyStringFilterField {
  CODE
  NAME
}

type ThirdPartyType {
  creationDate: DateTime
  creationUserId: String
  creationUserLabel: String
  lastModificationDate: DateTime
  lastModificationUserId: String
  lastModificationUserLabel: String
  id: String!
  name: String!
  ownerType: ThirdPartyTypeOwnerType!
  ownerId: String
  isEnabled: Boolean!
}

input ThirdPartyTypeBoolFilter {
  field: ThirdPartyTypeBoolFilterField!
  operator: BoolFilterOperator!
  filterValue1: Boolean!
}

enum ThirdPartyTypeBoolFilterField {
  IS_ENABLED
}

type ThirdPartyTypeConnection {
  edges: [ThirdParty]
  pageInfo: PageInfo
}

input ThirdPartyTypeInput {
  id: String
  name: String!
  isEnabled: Boolean
}

enum ThirdPartyTypeOwnerType {
  SYSTEM
  TENANT
}

input ThirdPartyTypeQueryParams {
  sortField: ThirdPartyTypeSortField
  sortDirection: SortDirection
  stringFilters: [ThirdPartyTypeStringFilter]
  boolFilters: [ThirdPartyTypeBoolFilter]
}

enum ThirdPartyTypeSortField {
  NAME
  IS_ENABLED
}

input ThirdPartyTypeStringFilter {
  field: ThirdPartyTypeStringFilterField!
  operator: StringFilterOperator!
  filterValue1: String!
}

enum ThirdPartyTypeStringFilterField {
  NAME
  OWNER_ID
}

type ThirdPartyTypeTypeConnection {
  edges: [ThirdPartyType]
  pageInfo: PageInfo
}

input ThirdPartyUpdateOptionsInput {
  createThirdParty: Boolean!
}

enum UserProfile {
  STANDARD_USER
  DOMAIN_ADMINISTRATOR
  ENVIRONMENT_ADMINISTRATOR
  ADMINISTRATOR
  TENANT_RECEIVER
  WEBSITE_ADMINISTRATOR
}

input VoiceJob {
  jobType: String
  trackingId: String
  scheduledStartTime: DateTime
  adhocRecipientFiles: [FileIdOrNewInputType]
  deDuplicate: Boolean
  adhocRecipients: [Recipient]
  documents: [FileIdOrNewInputType]
  parameter: VoiceParameter
}

input VoiceParameter {
  textToSpeechVoiceId: Int
  textToSpeechVoiceRate: Int
  scenarioId: Int
  sender: String
  transferNumber: String
  transferKey: String
  repeatKey: String
  acknowledgeKey: String
  actionMessage: FileReferenceBase
}

scalar Void
